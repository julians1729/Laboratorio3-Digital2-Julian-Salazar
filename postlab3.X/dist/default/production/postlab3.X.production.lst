

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 03 18:06:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0009                     _PORTEbits	set	9
   384     0013                     _SSPBUF	set	19
   385     0014                     _SSPCON	set	20
   386     0009                     _PORTE	set	9
   387     0005                     _PORTA	set	5
   388     0006                     _PORTB	set	6
   389     0008                     _PORTD	set	8
   390     0007                     _PORTCbits	set	7
   391     0049                     _RE1	set	73
   392     0094                     _SSPSTATbits	set	148
   393     0094                     _SSPSTAT	set	148
   394     008F                     _OSCCONbits	set	143
   395     0089                     _TRISE	set	137
   396     0088                     _TRISD	set	136
   397     0086                     _TRISB	set	134
   398     0085                     _TRISA	set	133
   399     043B                     _TRISC3	set	1083
   400     043D                     _TRISC5	set	1085
   401     0439                     _TRISC1	set	1081
   402     043A                     _TRISC2	set	1082
   403     0189                     _ANSELH	set	393
   404     0188                     _ANSEL	set	392
   405                           
   406                           	psect	strings
   407     0800                     __pstrings:
   408     0800                     stringtab:
   409     0800                     __stringtab:
   410     0800                     stringcode:	
   411                           ;	String table - string pointers are 1 byte each
   412                           
   413     0800                     stringdir:
   414     0800  3008               	movlw	high stringdir
   415     0801  008A               	movwf	10
   416     0802  0804               	movf	4,w
   417     0803  0A84               	incf	4,f
   418     0804  0782               	addwf	2,f
   419     0805                     __stringbase:
   420     0805  3400               	retlw	0
   421     0806                     __end_of__stringtab:
   422     0806                     STR_1:
   423     0806  3450               	retlw	80	;'P'
   424     0807  346F               	retlw	111	;'o'
   425     0808  3474               	retlw	116	;'t'
   426     0809  3431               	retlw	49	;'1'
   427     080A  3400               	retlw	0
   428     080B                     STR_2:
   429     080B  3450               	retlw	80	;'P'
   430     080C  346F               	retlw	111	;'o'
   431     080D  3474               	retlw	116	;'t'
   432     080E  3432               	retlw	50	;'2'
   433     080F  3400               	retlw	0
   434     0810                     STR_3:
   435     0810  3443               	retlw	67	;'C'
   436     0811  346F               	retlw	111	;'o'
   437     0812  346E               	retlw	110	;'n'
   438     0813  3474               	retlw	116	;'t'
   439     0814  3400               	retlw	0
   440                           
   441                           	psect	cinit
   442     07F3                     start_initialization:	
   443                           ; #config settings
   444                           
   445     07F3                     __initialization:
   446                           
   447                           ; Clear objects allocated to BANK0
   448     07F3  1383               	bcf	3,7	;select IRP bank0
   449     07F4  3054               	movlw	low __pbssBANK0
   450     07F5  0084               	movwf	4
   451     07F6  3069               	movlw	low (__pbssBANK0+21)
   452     07F7  120A  158A  25C9  120A  118A  	fcall	clear_ram0
   453     07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456     07FC                     __end_of__initialization:
   457     07FC  0183               	clrf	3
   458     07FD  120A  118A  29E2   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	bssBANK0
   461     0054                     __pbssBANK0:
   462     0054                     _ADC_voltaje_nc2:
   463     0054                     	ds	2
   464     0056                     _ADC_voltaje_nc:
   465     0056                     	ds	2
   466     0058                     _ADC_voltaje_2:
   467     0058                     	ds	2
   468     005A                     _ADC_voltaje:
   469     005A                     	ds	2
   470     005C                     _residuo3:
   471     005C                     	ds	1
   472     005D                     _unidades3:
   473     005D                     	ds	1
   474     005E                     _decenas3:
   475     005E                     	ds	1
   476     005F                     _centenas3:
   477     005F                     	ds	1
   478     0060                     _residuo2:
   479     0060                     	ds	1
   480     0061                     _unidades2:
   481     0061                     	ds	1
   482     0062                     _decenas2:
   483     0062                     	ds	1
   484     0063                     _centenas2:
   485     0063                     	ds	1
   486     0064                     _residuo:
   487     0064                     	ds	1
   488     0065                     _unidades:
   489     0065                     	ds	1
   490     0066                     _decenas:
   491     0066                     	ds	1
   492     0067                     _centenas:
   493     0067                     	ds	1
   494     0068                     _contador:
   495     0068                     	ds	1
   496                           
   497                           	psect	clrtext
   498     0DC9                     clear_ram0:	
   499                           ;	Called with FSR containing the base address, and
   500                           ;	W with the last address+1
   501                           
   502     0DC9  0064               	clrwdt	;clear the watchdog before getting into this loop
   503     0DCA                     clrloop0:
   504     0DCA  0180               	clrf	0	;clear RAM location pointed to by FSR
   505     0DCB  0A84               	incf	4,f	;increment pointer
   506     0DCC  0604               	xorwf	4,w	;XOR with final address
   507     0DCD  1903               	btfsc	3,2	;have we reached the end yet?
   508     0DCE  3400               	retlw	0	;all done for this memory range, return
   509     0DCF  0604               	xorwf	4,w	;XOR again to restore value
   510     0DD0  2DCA               	goto	clrloop0	;do the next byte
   511                           
   512                           	psect	cstackCOMMON
   513     0070                     __pcstackCOMMON:
   514     0070                     ?_setup:
   515     0070                     ?_Lcd_Init:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_spiWrite:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ??_spiWrite:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_spiRead:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ??_spiRead:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_Lcd_Clear:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_Lcd_Write_String:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_Lcd_Write_Char:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_spiInit:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_main:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_spiReceiveWait:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ??_spiReceiveWait:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_Lcd_Port:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ??_Lcd_Port:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_Lcd_Cmd:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?__Umul8_16:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?___awdiv:	
   564                           ; 2 bytes @ 0x0
   565                           
   566     0070                     ?___awmod:	
   567                           ; 2 bytes @ 0x0
   568                           
   569     0070                     ?___xxtofl:	
   570                           ; 2 bytes @ 0x0
   571                           
   572     0070                     spiInit@sDataSample:	
   573                           ; 4 bytes @ 0x0
   574                           
   575     0070                     spiWrite@dat:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     Lcd_Port@a:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     __Umul8_16@multiplicand:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ___awdiv@divisor:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ___awmod@divisor:	
   588                           ; 2 bytes @ 0x0
   589                           
   590     0070                     ___xxtofl@val:	
   591                           ; 2 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595     0070                     	ds	1
   596     0071                     ??_Lcd_Write_Char:
   597     0071                     ??_Lcd_Cmd:	
   598                           ; 1 bytes @ 0x1
   599                           
   600     0071                     spiInit@sClockIdle:	
   601                           ; 1 bytes @ 0x1
   602                           
   603                           
   604                           ; 1 bytes @ 0x1
   605     0071                     	ds	1
   606     0072                     ??__Umul8_16:
   607     0072                     spiInit@sTransmitEdge:	
   608                           ; 1 bytes @ 0x2
   609                           
   610     0072                     Lcd_Write_Char@a:	
   611                           ; 1 bytes @ 0x2
   612                           
   613     0072                     ___awdiv@dividend:	
   614                           ; 1 bytes @ 0x2
   615                           
   616     0072                     ___awmod@dividend:	
   617                           ; 2 bytes @ 0x2
   618                           
   619                           
   620                           ; 2 bytes @ 0x2
   621     0072                     	ds	1
   622     0073                     ??_Lcd_Write_String:
   623     0073                     ??_spiInit:	
   624                           ; 1 bytes @ 0x3
   625                           
   626     0073                     spiInit@sType:	
   627                           ; 1 bytes @ 0x3
   628                           
   629     0073                     Lcd_Cmd@a:	
   630                           ; 1 bytes @ 0x3
   631                           
   632     0073                     Lcd_Write_String@i:	
   633                           ; 1 bytes @ 0x3
   634                           
   635                           
   636                           ; 2 bytes @ 0x3
   637     0073                     	ds	1
   638     0074                     ??_setup:
   639     0074                     ??_Lcd_Init:	
   640                           ; 1 bytes @ 0x4
   641                           
   642     0074                     ??_Lcd_Clear:	
   643                           ; 1 bytes @ 0x4
   644                           
   645     0074                     ?_Lcd_Set_Cursor:	
   646                           ; 1 bytes @ 0x4
   647                           
   648     0074                     ??___awdiv:	
   649                           ; 1 bytes @ 0x4
   650                           
   651     0074                     ??___awmod:	
   652                           ; 1 bytes @ 0x4
   653                           
   654     0074                     ??___xxtofl:	
   655                           ; 1 bytes @ 0x4
   656                           
   657     0074                     Lcd_Set_Cursor@b:	
   658                           ; 1 bytes @ 0x4
   659                           
   660     0074                     __Umul8_16@product:	
   661                           ; 1 bytes @ 0x4
   662                           
   663                           
   664                           ; 2 bytes @ 0x4
   665     0074                     	ds	1
   666     0075                     ??_Lcd_Set_Cursor:
   667     0075                     Lcd_Set_Cursor@a:	
   668                           ; 1 bytes @ 0x5
   669                           
   670     0075                     Lcd_Write_String@a:	
   671                           ; 1 bytes @ 0x5
   672                           
   673     0075                     ___awdiv@counter:	
   674                           ; 1 bytes @ 0x5
   675                           
   676     0075                     ___awmod@counter:	
   677                           ; 1 bytes @ 0x5
   678                           
   679                           
   680                           ; 1 bytes @ 0x5
   681     0075                     	ds	1
   682     0076                     Lcd_Set_Cursor@direccion:
   683     0076                     ___awdiv@sign:	
   684                           ; 1 bytes @ 0x6
   685                           
   686     0076                     ___awmod@sign:	
   687                           ; 1 bytes @ 0x6
   688                           
   689     0076                     __Umul8_16@word_mpld:	
   690                           ; 1 bytes @ 0x6
   691                           
   692                           
   693                           ; 2 bytes @ 0x6
   694     0076                     	ds	1
   695     0077                     ___awdiv@quotient:
   696                           
   697                           ; 2 bytes @ 0x7
   698     0077                     	ds	1
   699     0078                     __Umul8_16@multiplier:
   700     0078                     ___xxtofl@sign:	
   701                           ; 1 bytes @ 0x8
   702                           
   703                           
   704                           ; 1 bytes @ 0x8
   705     0078                     	ds	1
   706     0079                     ?_displays:
   707     0079                     ?_displays2:	
   708                           ; 1 bytes @ 0x9
   709                           
   710     0079                     ?_displays3:	
   711                           ; 1 bytes @ 0x9
   712                           
   713     0079                     ___xxtofl@exp:	
   714                           ; 1 bytes @ 0x9
   715                           
   716     0079                     displays@num:	
   717                           ; 1 bytes @ 0x9
   718                           
   719     0079                     displays2@num:	
   720                           ; 2 bytes @ 0x9
   721                           
   722     0079                     displays3@num:	
   723                           ; 2 bytes @ 0x9
   724                           
   725                           
   726                           ; 2 bytes @ 0x9
   727     0079                     	ds	1
   728     007A                     ___xxtofl@arg:
   729                           
   730                           ; 4 bytes @ 0xA
   731     007A                     	ds	1
   732     007B                     ??_displays:
   733     007B                     ??_displays2:	
   734                           ; 1 bytes @ 0xB
   735                           
   736     007B                     ??_displays3:	
   737                           ; 1 bytes @ 0xB
   738                           
   739                           
   740                           ; 1 bytes @ 0xB
   741     007B                     	ds	3
   742                           
   743                           	psect	cstackBANK0
   744     0020                     __pcstackBANK0:
   745     0020                     ?___flmul:
   746     0020                     ___flmul@b:	
   747                           ; 4 bytes @ 0x0
   748                           
   749                           
   750                           ; 4 bytes @ 0x0
   751     0020                     	ds	4
   752     0024                     ___flmul@a:
   753                           
   754                           ; 4 bytes @ 0x4
   755     0024                     	ds	4
   756     0028                     ??___flmul:
   757                           
   758                           ; 1 bytes @ 0x8
   759     0028                     	ds	5
   760     002D                     ___flmul@sign:
   761                           
   762                           ; 1 bytes @ 0xD
   763     002D                     	ds	1
   764     002E                     ___flmul@grs:
   765                           
   766                           ; 4 bytes @ 0xE
   767     002E                     	ds	4
   768     0032                     ___flmul@aexp:
   769                           
   770                           ; 1 bytes @ 0x12
   771     0032                     	ds	1
   772     0033                     ___flmul@bexp:
   773                           
   774                           ; 1 bytes @ 0x13
   775     0033                     	ds	1
   776     0034                     ___flmul@prod:
   777                           
   778                           ; 4 bytes @ 0x14
   779     0034                     	ds	4
   780     0038                     ___flmul@temp:
   781                           
   782                           ; 2 bytes @ 0x18
   783     0038                     	ds	2
   784     003A                     ?___fltol:
   785     003A                     ___fltol@f1:	
   786                           ; 4 bytes @ 0x1A
   787                           
   788                           
   789                           ; 4 bytes @ 0x1A
   790     003A                     	ds	4
   791     003E                     ??___fltol:
   792                           
   793                           ; 1 bytes @ 0x1E
   794     003E                     	ds	4
   795     0042                     ___fltol@sign1:
   796                           
   797                           ; 1 bytes @ 0x22
   798     0042                     	ds	1
   799     0043                     ___fltol@exp1:
   800                           
   801                           ; 1 bytes @ 0x23
   802     0043                     	ds	1
   803     0044                     ??_main:
   804                           
   805                           ; 1 bytes @ 0x24
   806     0044                     	ds	3
   807     0047                     main@valor_c:
   808                           
   809                           ; 1 bytes @ 0x27
   810     0047                     	ds	1
   811     0048                     main@valor_d:
   812                           
   813                           ; 1 bytes @ 0x28
   814     0048                     	ds	1
   815     0049                     main@valor_u:
   816                           
   817                           ; 1 bytes @ 0x29
   818     0049                     	ds	1
   819     004A                     main@valor_c2:
   820                           
   821                           ; 1 bytes @ 0x2A
   822     004A                     	ds	1
   823     004B                     main@valor_d2:
   824                           
   825                           ; 1 bytes @ 0x2B
   826     004B                     	ds	1
   827     004C                     main@valor_u2:
   828                           
   829                           ; 1 bytes @ 0x2C
   830     004C                     	ds	1
   831     004D                     main@valor_c3:
   832                           
   833                           ; 1 bytes @ 0x2D
   834     004D                     	ds	1
   835     004E                     main@valor_d3:
   836                           
   837                           ; 1 bytes @ 0x2E
   838     004E                     	ds	1
   839     004F                     main@valor_u3:
   840                           
   841                           ; 1 bytes @ 0x2F
   842     004F                     	ds	1
   843     0050                     _main$1001:
   844                           
   845                           ; 4 bytes @ 0x30
   846     0050                     	ds	4
   847                           
   848                           	psect	maintext
   849     01E2                     __pmaintext:	
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 72 in file "Main_master.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  valor_u3        1   47[BANK0 ] unsigned char 
   860 ;;  valor_d3        1   46[BANK0 ] unsigned char 
   861 ;;  valor_c3        1   45[BANK0 ] unsigned char 
   862 ;;  valor_u2        1   44[BANK0 ] unsigned char 
   863 ;;  valor_d2        1   43[BANK0 ] unsigned char 
   864 ;;  valor_c2        1   42[BANK0 ] unsigned char 
   865 ;;  valor_u         1   41[BANK0 ] unsigned char 
   866 ;;  valor_d         1   40[BANK0 ] unsigned char 
   867 ;;  valor_c         1   39[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : B00/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0      13       0       0       0
   879 ;;      Temps:          0       3       0       0       0
   880 ;;      Totals:         0      16       0       0       0
   881 ;;Total ram usage:       16 bytes
   882 ;; Hardware stack levels required when called: 3
   883 ;; This function calls:
   884 ;;		_Lcd_Clear
   885 ;;		_Lcd_Init
   886 ;;		_Lcd_Set_Cursor
   887 ;;		_Lcd_Write_Char
   888 ;;		_Lcd_Write_String
   889 ;;		___flmul
   890 ;;		___fltol
   891 ;;		___xxtofl
   892 ;;		_displays
   893 ;;		_displays2
   894 ;;		_displays3
   895 ;;		_setup
   896 ;;		_spiRead
   897 ;;		_spiWrite
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903     01E2                     _main:	
   904                           ;psect for function _main
   905                           
   906     01E2                     l1761:	
   907                           ;incstack = 0
   908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   909                           
   910                           
   911                           ;Main_master.c: 73:     setup();
   912     01E2  120A  158A  262D  120A  118A  	fcall	_setup
   913                           
   914                           ;Main_master.c: 74:     Lcd_Init();
   915     01E7  120A  158A  2675  120A  118A  	fcall	_Lcd_Init
   916     01EC                     l1763:
   917                           
   918                           ;Main_master.c: 80:        PORTCbits.RC2 = 0;
   919     01EC  1283               	bcf	3,5	;RP0=0, select bank0
   920     01ED  1303               	bcf	3,6	;RP1=0, select bank0
   921     01EE  1107               	bcf	7,2	;volatile
   922     01EF                     l1765:
   923                           
   924                           ;Main_master.c: 81:        _delay((unsigned long)((1)*(8000000/4000.0)));
   925     01EF  3003               	movlw	3
   926     01F0  1283               	bcf	3,5	;RP0=0, select bank0
   927     01F1  1303               	bcf	3,6	;RP1=0, select bank0
   928     01F2  00C5               	movwf	??_main+1
   929     01F3  3097               	movlw	151
   930     01F4  00C4               	movwf	??_main
   931     01F5                     u1777:
   932     01F5  0BC4               	decfsz	??_main,f
   933     01F6  29F5               	goto	u1777
   934     01F7  0BC5               	decfsz	??_main+1,f
   935     01F8  29F5               	goto	u1777
   936     01F9                     l1767:
   937                           
   938                           ;Main_master.c: 83:        spiWrite(1);
   939     01F9  3001               	movlw	1
   940     01FA  120A  158A  25BC  120A  118A  	fcall	_spiWrite
   941     01FF                     l1769:
   942                           
   943                           ;Main_master.c: 84:        PORTD = spiRead();
   944     01FF  120A  158A  25D1  120A  118A  	fcall	_spiRead
   945     0204  1283               	bcf	3,5	;RP0=0, select bank0
   946     0205  1303               	bcf	3,6	;RP1=0, select bank0
   947     0206  0088               	movwf	8	;volatile
   948     0207                     l1771:
   949                           
   950                           ;Main_master.c: 85:        ADC_voltaje_nc = PORTD;
   951     0207  0808               	movf	8,w	;volatile
   952     0208  00C4               	movwf	??_main
   953     0209  01C5               	clrf	??_main+1
   954     020A  0844               	movf	??_main,w
   955     020B  00D6               	movwf	_ADC_voltaje_nc
   956     020C  0845               	movf	??_main+1,w
   957     020D  00D7               	movwf	_ADC_voltaje_nc+1
   958     020E                     l1773:
   959                           
   960                           ;Main_master.c: 87:        _delay((unsigned long)((1)*(8000000/4000.0)));
   961     020E  3003               	movlw	3
   962     020F  1283               	bcf	3,5	;RP0=0, select bank0
   963     0210  1303               	bcf	3,6	;RP1=0, select bank0
   964     0211  00C5               	movwf	??_main+1
   965     0212  3097               	movlw	151
   966     0213  00C4               	movwf	??_main
   967     0214                     u1787:
   968     0214  0BC4               	decfsz	??_main,f
   969     0215  2A14               	goto	u1787
   970     0216  0BC5               	decfsz	??_main+1,f
   971     0217  2A14               	goto	u1787
   972     0218                     l1775:
   973                           
   974                           ;Main_master.c: 88:        PORTCbits.RC2 = 1;
   975     0218  1283               	bcf	3,5	;RP0=0, select bank0
   976     0219  1303               	bcf	3,6	;RP1=0, select bank0
   977     021A  1507               	bsf	7,2	;volatile
   978     021B                     l1777:
   979                           
   980                           ;Main_master.c: 90:        _delay((unsigned long)((250)*(8000000/4000.0)));
   981     021B  3003               	movlw	3
   982     021C  1283               	bcf	3,5	;RP0=0, select bank0
   983     021D  1303               	bcf	3,6	;RP1=0, select bank0
   984     021E  00C6               	movwf	??_main+2
   985     021F  308A               	movlw	138
   986     0220  00C5               	movwf	??_main+1
   987     0221  3055               	movlw	85
   988     0222  00C4               	movwf	??_main
   989     0223                     u1797:
   990     0223  0BC4               	decfsz	??_main,f
   991     0224  2A23               	goto	u1797
   992     0225  0BC5               	decfsz	??_main+1,f
   993     0226  2A23               	goto	u1797
   994     0227  0BC6               	decfsz	??_main+2,f
   995     0228  2A23               	goto	u1797
   996     0229                     l1779:
   997                           
   998                           ;Main_master.c: 92:        PORTCbits.RC1 = 0;
   999     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1000     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1001     022B  1087               	bcf	7,1	;volatile
  1002     022C                     l1781:
  1003                           
  1004                           ;Main_master.c: 93:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1005     022C  3003               	movlw	3
  1006     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1007     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1008     022F  00C5               	movwf	??_main+1
  1009     0230  3097               	movlw	151
  1010     0231  00C4               	movwf	??_main
  1011     0232                     u1807:
  1012     0232  0BC4               	decfsz	??_main,f
  1013     0233  2A32               	goto	u1807
  1014     0234  0BC5               	decfsz	??_main+1,f
  1015     0235  2A32               	goto	u1807
  1016     0236                     l1783:
  1017                           
  1018                           ;Main_master.c: 95:        spiWrite(1);
  1019     0236  3001               	movlw	1
  1020     0237  120A  158A  25BC  120A  118A  	fcall	_spiWrite
  1021     023C                     l1785:
  1022                           
  1023                           ;Main_master.c: 96:        PORTB = spiRead();
  1024     023C  120A  158A  25D1  120A  118A  	fcall	_spiRead
  1025     0241  1283               	bcf	3,5	;RP0=0, select bank0
  1026     0242  1303               	bcf	3,6	;RP1=0, select bank0
  1027     0243  0086               	movwf	6	;volatile
  1028     0244                     l1787:
  1029                           
  1030                           ;Main_master.c: 97:        ADC_voltaje_nc2= PORTB;
  1031     0244  0806               	movf	6,w	;volatile
  1032     0245  00C4               	movwf	??_main
  1033     0246  01C5               	clrf	??_main+1
  1034     0247  0844               	movf	??_main,w
  1035     0248  00D4               	movwf	_ADC_voltaje_nc2
  1036     0249  0845               	movf	??_main+1,w
  1037     024A  00D5               	movwf	_ADC_voltaje_nc2+1
  1038     024B                     l1789:
  1039                           
  1040                           ;Main_master.c: 99:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1041     024B  3003               	movlw	3
  1042     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1043     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1044     024E  00C5               	movwf	??_main+1
  1045     024F  3097               	movlw	151
  1046     0250  00C4               	movwf	??_main
  1047     0251                     u1817:
  1048     0251  0BC4               	decfsz	??_main,f
  1049     0252  2A51               	goto	u1817
  1050     0253  0BC5               	decfsz	??_main+1,f
  1051     0254  2A51               	goto	u1817
  1052     0255                     l1791:
  1053                           
  1054                           ;Main_master.c: 100:        PORTCbits.RC1 = 1;
  1055     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0257  1487               	bsf	7,1	;volatile
  1058     0258                     l1793:
  1059                           
  1060                           ;Main_master.c: 102:        _delay((unsigned long)((250)*(8000000/4000.0)));
  1061     0258  3003               	movlw	3
  1062     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1063     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1064     025B  00C6               	movwf	??_main+2
  1065     025C  308A               	movlw	138
  1066     025D  00C5               	movwf	??_main+1
  1067     025E  3055               	movlw	85
  1068     025F  00C4               	movwf	??_main
  1069     0260                     u1827:
  1070     0260  0BC4               	decfsz	??_main,f
  1071     0261  2A60               	goto	u1827
  1072     0262  0BC5               	decfsz	??_main+1,f
  1073     0263  2A60               	goto	u1827
  1074     0264  0BC6               	decfsz	??_main+2,f
  1075     0265  2A60               	goto	u1827
  1076     0266                     l1795:
  1077                           
  1078                           ;Main_master.c: 104:        PORTCbits.RC2 = 0;
  1079     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1080     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1081     0268  1107               	bcf	7,2	;volatile
  1082     0269                     l1797:
  1083                           
  1084                           ;Main_master.c: 105:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1085     0269  3003               	movlw	3
  1086     026A  1283               	bcf	3,5	;RP0=0, select bank0
  1087     026B  1303               	bcf	3,6	;RP1=0, select bank0
  1088     026C  00C5               	movwf	??_main+1
  1089     026D  3097               	movlw	151
  1090     026E  00C4               	movwf	??_main
  1091     026F                     u1837:
  1092     026F  0BC4               	decfsz	??_main,f
  1093     0270  2A6F               	goto	u1837
  1094     0271  0BC5               	decfsz	??_main+1,f
  1095     0272  2A6F               	goto	u1837
  1096     0273                     l1799:
  1097                           
  1098                           ;Main_master.c: 107:        spiWrite(2);
  1099     0273  3002               	movlw	2
  1100     0274  120A  158A  25BC  120A  118A  	fcall	_spiWrite
  1101     0279                     l1801:
  1102                           
  1103                           ;Main_master.c: 108:        contador= spiRead();
  1104     0279  120A  158A  25D1  120A  118A  	fcall	_spiRead
  1105     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1106     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1107     0280  00E8               	movwf	_contador
  1108     0281                     l1803:
  1109                           
  1110                           ;Main_master.c: 110:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1111     0281  3003               	movlw	3
  1112     0282  1283               	bcf	3,5	;RP0=0, select bank0
  1113     0283  1303               	bcf	3,6	;RP1=0, select bank0
  1114     0284  00C5               	movwf	??_main+1
  1115     0285  3097               	movlw	151
  1116     0286  00C4               	movwf	??_main
  1117     0287                     u1847:
  1118     0287  0BC4               	decfsz	??_main,f
  1119     0288  2A87               	goto	u1847
  1120     0289  0BC5               	decfsz	??_main+1,f
  1121     028A  2A87               	goto	u1847
  1122     028B                     l1805:
  1123                           
  1124                           ;Main_master.c: 111:        PORTCbits.RC2 = 1;
  1125     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1126     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1127     028D  1507               	bsf	7,2	;volatile
  1128     028E                     l1807:
  1129                           
  1130                           ;Main_master.c: 113:        _delay((unsigned long)((250)*(8000000/4000.0)));
  1131     028E  3003               	movlw	3
  1132     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1133     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1134     0291  00C6               	movwf	??_main+2
  1135     0292  308A               	movlw	138
  1136     0293  00C5               	movwf	??_main+1
  1137     0294  3055               	movlw	85
  1138     0295  00C4               	movwf	??_main
  1139     0296                     u1857:
  1140     0296  0BC4               	decfsz	??_main,f
  1141     0297  2A96               	goto	u1857
  1142     0298  0BC5               	decfsz	??_main+1,f
  1143     0299  2A96               	goto	u1857
  1144     029A  0BC6               	decfsz	??_main+2,f
  1145     029B  2A96               	goto	u1857
  1146     029C                     l1809:
  1147                           
  1148                           ;Main_master.c: 115:        PORTCbits.RC1 = 0;
  1149     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1150     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1151     029E  1087               	bcf	7,1	;volatile
  1152     029F                     l1811:
  1153                           
  1154                           ;Main_master.c: 116:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1155     029F  3003               	movlw	3
  1156     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1157     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1158     02A2  00C5               	movwf	??_main+1
  1159     02A3  3097               	movlw	151
  1160     02A4  00C4               	movwf	??_main
  1161     02A5                     u1867:
  1162     02A5  0BC4               	decfsz	??_main,f
  1163     02A6  2AA5               	goto	u1867
  1164     02A7  0BC5               	decfsz	??_main+1,f
  1165     02A8  2AA5               	goto	u1867
  1166                           
  1167                           ;Main_master.c: 118:        spiWrite(1);
  1168     02A9  3001               	movlw	1
  1169     02AA  120A  158A  25BC  120A  118A  	fcall	_spiWrite
  1170                           
  1171                           ;Main_master.c: 119:        PORTB = spiRead();
  1172     02AF  120A  158A  25D1  120A  118A  	fcall	_spiRead
  1173     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1174     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1175     02B6  0086               	movwf	6	;volatile
  1176     02B7                     l1813:
  1177                           
  1178                           ;Main_master.c: 122:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1179     02B7  3003               	movlw	3
  1180     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1181     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1182     02BA  00C5               	movwf	??_main+1
  1183     02BB  3097               	movlw	151
  1184     02BC  00C4               	movwf	??_main
  1185     02BD                     u1877:
  1186     02BD  0BC4               	decfsz	??_main,f
  1187     02BE  2ABD               	goto	u1877
  1188     02BF  0BC5               	decfsz	??_main+1,f
  1189     02C0  2ABD               	goto	u1877
  1190     02C1                     l1815:
  1191                           
  1192                           ;Main_master.c: 123:        PORTCbits.RC1 = 1;
  1193     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1194     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1195     02C3  1487               	bsf	7,1	;volatile
  1196     02C4                     l1817:
  1197                           
  1198                           ;Main_master.c: 125:        _delay((unsigned long)((250)*(8000000/4000.0)));
  1199     02C4  3003               	movlw	3
  1200     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1201     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1202     02C7  00C6               	movwf	??_main+2
  1203     02C8  308A               	movlw	138
  1204     02C9  00C5               	movwf	??_main+1
  1205     02CA  3055               	movlw	85
  1206     02CB  00C4               	movwf	??_main
  1207     02CC                     u1887:
  1208     02CC  0BC4               	decfsz	??_main,f
  1209     02CD  2ACC               	goto	u1887
  1210     02CE  0BC5               	decfsz	??_main+1,f
  1211     02CF  2ACC               	goto	u1887
  1212     02D0  0BC6               	decfsz	??_main+2,f
  1213     02D1  2ACC               	goto	u1887
  1214     02D2                     l1819:
  1215                           
  1216                           ;Main_master.c: 127:         ADC_voltaje = (int)(ADC_voltaje_nc* ((float)5/255) * 100);
  1217     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1218     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1219     02D4  0856               	movf	_ADC_voltaje_nc,w
  1220     02D5  00F0               	movwf	___xxtofl@val
  1221     02D6  0857               	movf	_ADC_voltaje_nc+1,w
  1222     02D7  00F1               	movwf	___xxtofl@val+1
  1223     02D8  3000               	movlw	0
  1224     02D9  1BF1               	btfsc	___xxtofl@val+1,7
  1225     02DA  30FF               	movlw	255
  1226     02DB  00F2               	movwf	___xxtofl@val+2
  1227     02DC  00F3               	movwf	___xxtofl@val+3
  1228     02DD  3001               	movlw	1
  1229     02DE  120A  118A  212A  120A  118A  	fcall	___xxtofl
  1230     02E3  0873               	movf	?___xxtofl+3,w
  1231     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1232     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1233     02E6  00A7               	movwf	___flmul@a+3
  1234     02E7  0872               	movf	?___xxtofl+2,w
  1235     02E8  00A6               	movwf	___flmul@a+2
  1236     02E9  0871               	movf	?___xxtofl+1,w
  1237     02EA  00A5               	movwf	___flmul@a+1
  1238     02EB  0870               	movf	?___xxtofl,w
  1239     02EC  00A4               	movwf	___flmul@a
  1240     02ED  303C               	movlw	60
  1241     02EE  00A3               	movwf	___flmul@b+3
  1242     02EF  30A0               	movlw	160
  1243     02F0  00A2               	movwf	___flmul@b+2
  1244     02F1  30A0               	movlw	160
  1245     02F2  00A1               	movwf	___flmul@b+1
  1246     02F3  30A1               	movlw	161
  1247     02F4  00A0               	movwf	___flmul@b
  1248     02F5  120A  118A  24AE  120A  118A  	fcall	___flmul
  1249     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1250     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1251     02FC  0823               	movf	?___flmul+3,w
  1252     02FD  00D3               	movwf	_main$1001+3
  1253     02FE  0822               	movf	?___flmul+2,w
  1254     02FF  00D2               	movwf	_main$1001+2
  1255     0300  0821               	movf	?___flmul+1,w
  1256     0301  00D1               	movwf	_main$1001+1
  1257     0302  0820               	movf	?___flmul,w
  1258     0303  00D0               	movwf	_main$1001
  1259     0304                     l1821:
  1260                           
  1261                           ;Main_master.c: 127:         ADC_voltaje = (int)(ADC_voltaje_nc* ((float)5/255) * 100);
  1262     0304  0853               	movf	_main$1001+3,w
  1263     0305  00A7               	movwf	___flmul@a+3
  1264     0306  0852               	movf	_main$1001+2,w
  1265     0307  00A6               	movwf	___flmul@a+2
  1266     0308  0851               	movf	_main$1001+1,w
  1267     0309  00A5               	movwf	___flmul@a+1
  1268     030A  0850               	movf	_main$1001,w
  1269     030B  00A4               	movwf	___flmul@a
  1270     030C  3042               	movlw	66
  1271     030D  00A3               	movwf	___flmul@b+3
  1272     030E  30C8               	movlw	200
  1273     030F  00A2               	movwf	___flmul@b+2
  1274     0310  3000               	movlw	0
  1275     0311  00A1               	movwf	___flmul@b+1
  1276     0312  3000               	movlw	0
  1277     0313  00A0               	movwf	___flmul@b
  1278     0314  120A  118A  24AE  120A  118A  	fcall	___flmul
  1279     0319  1283               	bcf	3,5	;RP0=0, select bank0
  1280     031A  1303               	bcf	3,6	;RP1=0, select bank0
  1281     031B  0823               	movf	?___flmul+3,w
  1282     031C  00BD               	movwf	___fltol@f1+3
  1283     031D  0822               	movf	?___flmul+2,w
  1284     031E  00BC               	movwf	___fltol@f1+2
  1285     031F  0821               	movf	?___flmul+1,w
  1286     0320  00BB               	movwf	___fltol@f1+1
  1287     0321  0820               	movf	?___flmul,w
  1288     0322  00BA               	movwf	___fltol@f1
  1289     0323  120A  118A  20B2  120A  118A  	fcall	___fltol
  1290     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1292     032A  083B               	movf	?___fltol+1,w
  1293     032B  00DB               	movwf	_ADC_voltaje+1
  1294     032C  083A               	movf	?___fltol,w
  1295     032D  00DA               	movwf	_ADC_voltaje
  1296                           
  1297                           ;Main_master.c: 128:         displays(ADC_voltaje);
  1298     032E  085B               	movf	_ADC_voltaje+1,w
  1299     032F  00FA               	movwf	displays@num+1
  1300     0330  085A               	movf	_ADC_voltaje,w
  1301     0331  00F9               	movwf	displays@num
  1302     0332  120A  158A  26C0  120A  118A  	fcall	_displays
  1303     0337                     l1823:
  1304                           
  1305                           ;Main_master.c: 130:         ADC_voltaje_2 = (int)(ADC_voltaje_nc2* ((float)5/255) * 100
      +                          );
  1306     0337  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0338  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0339  0854               	movf	_ADC_voltaje_nc2,w
  1309     033A  00F0               	movwf	___xxtofl@val
  1310     033B  0855               	movf	_ADC_voltaje_nc2+1,w
  1311     033C  00F1               	movwf	___xxtofl@val+1
  1312     033D  3000               	movlw	0
  1313     033E  1BF1               	btfsc	___xxtofl@val+1,7
  1314     033F  30FF               	movlw	255
  1315     0340  00F2               	movwf	___xxtofl@val+2
  1316     0341  00F3               	movwf	___xxtofl@val+3
  1317     0342  3001               	movlw	1
  1318     0343  120A  118A  212A  120A  118A  	fcall	___xxtofl
  1319     0348  0873               	movf	?___xxtofl+3,w
  1320     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1321     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1322     034B  00A7               	movwf	___flmul@a+3
  1323     034C  0872               	movf	?___xxtofl+2,w
  1324     034D  00A6               	movwf	___flmul@a+2
  1325     034E  0871               	movf	?___xxtofl+1,w
  1326     034F  00A5               	movwf	___flmul@a+1
  1327     0350  0870               	movf	?___xxtofl,w
  1328     0351  00A4               	movwf	___flmul@a
  1329     0352  303C               	movlw	60
  1330     0353  00A3               	movwf	___flmul@b+3
  1331     0354  30A0               	movlw	160
  1332     0355  00A2               	movwf	___flmul@b+2
  1333     0356  30A0               	movlw	160
  1334     0357  00A1               	movwf	___flmul@b+1
  1335     0358  30A1               	movlw	161
  1336     0359  00A0               	movwf	___flmul@b
  1337     035A  120A  118A  24AE  120A  118A  	fcall	___flmul
  1338     035F  1283               	bcf	3,5	;RP0=0, select bank0
  1339     0360  1303               	bcf	3,6	;RP1=0, select bank0
  1340     0361  0823               	movf	?___flmul+3,w
  1341     0362  00D3               	movwf	_main$1001+3
  1342     0363  0822               	movf	?___flmul+2,w
  1343     0364  00D2               	movwf	_main$1001+2
  1344     0365  0821               	movf	?___flmul+1,w
  1345     0366  00D1               	movwf	_main$1001+1
  1346     0367  0820               	movf	?___flmul,w
  1347     0368  00D0               	movwf	_main$1001
  1348     0369                     l1825:
  1349                           
  1350                           ;Main_master.c: 130:         ADC_voltaje_2 = (int)(ADC_voltaje_nc2* ((float)5/255) * 100
      +                          );
  1351     0369  0853               	movf	_main$1001+3,w
  1352     036A  00A7               	movwf	___flmul@a+3
  1353     036B  0852               	movf	_main$1001+2,w
  1354     036C  00A6               	movwf	___flmul@a+2
  1355     036D  0851               	movf	_main$1001+1,w
  1356     036E  00A5               	movwf	___flmul@a+1
  1357     036F  0850               	movf	_main$1001,w
  1358     0370  00A4               	movwf	___flmul@a
  1359     0371  3042               	movlw	66
  1360     0372  00A3               	movwf	___flmul@b+3
  1361     0373  30C8               	movlw	200
  1362     0374  00A2               	movwf	___flmul@b+2
  1363     0375  3000               	movlw	0
  1364     0376  00A1               	movwf	___flmul@b+1
  1365     0377  3000               	movlw	0
  1366     0378  00A0               	movwf	___flmul@b
  1367     0379  120A  118A  24AE  120A  118A  	fcall	___flmul
  1368     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1369     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1370     0380  0823               	movf	?___flmul+3,w
  1371     0381  00BD               	movwf	___fltol@f1+3
  1372     0382  0822               	movf	?___flmul+2,w
  1373     0383  00BC               	movwf	___fltol@f1+2
  1374     0384  0821               	movf	?___flmul+1,w
  1375     0385  00BB               	movwf	___fltol@f1+1
  1376     0386  0820               	movf	?___flmul,w
  1377     0387  00BA               	movwf	___fltol@f1
  1378     0388  120A  118A  20B2  120A  118A  	fcall	___fltol
  1379     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1380     038E  1303               	bcf	3,6	;RP1=0, select bank0
  1381     038F  083B               	movf	?___fltol+1,w
  1382     0390  00D9               	movwf	_ADC_voltaje_2+1
  1383     0391  083A               	movf	?___fltol,w
  1384     0392  00D8               	movwf	_ADC_voltaje_2
  1385                           
  1386                           ;Main_master.c: 131:         displays2(ADC_voltaje_2);
  1387     0393  0859               	movf	_ADC_voltaje_2+1,w
  1388     0394  00FA               	movwf	displays2@num+1
  1389     0395  0858               	movf	_ADC_voltaje_2,w
  1390     0396  00F9               	movwf	displays2@num
  1391     0397  120A  158A  270D  120A  118A  	fcall	_displays2
  1392                           
  1393                           ;Main_master.c: 133:         displays3(contador);
  1394     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1395     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1396     039E  0868               	movf	_contador,w
  1397     039F  00C4               	movwf	??_main
  1398     03A0  01C5               	clrf	??_main+1
  1399     03A1  0844               	movf	??_main,w
  1400     03A2  00F9               	movwf	displays3@num
  1401     03A3  0845               	movf	??_main+1,w
  1402     03A4  00FA               	movwf	displays3@num+1
  1403     03A5  120A  158A  275A  120A  118A  	fcall	_displays3
  1404                           
  1405                           ;Main_master.c: 135:         Lcd_Clear();
  1406     03AA  120A  158A  25DA  120A  118A  	fcall	_Lcd_Clear
  1407                           
  1408                           ;Main_master.c: 137:         Lcd_Set_Cursor(1,1);
  1409     03AF  01F4               	clrf	Lcd_Set_Cursor@b
  1410     03B0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1411     03B1  3001               	movlw	1
  1412     03B2  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1413     03B7                     l1827:
  1414                           
  1415                           ;Main_master.c: 138:         Lcd_Write_String("Pot1");
  1416     03B7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1417     03B8  120A  158A  2650  120A  118A  	fcall	_Lcd_Write_String
  1418     03BD                     l1829:
  1419                           
  1420                           ;Main_master.c: 140:         Lcd_Set_Cursor(2,1);
  1421     03BD  01F4               	clrf	Lcd_Set_Cursor@b
  1422     03BE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1423     03BF  3002               	movlw	2
  1424     03C0  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1425     03C5                     l1831:
  1426                           
  1427                           ;Main_master.c: 141:         char valor_c = centenas + '0';
  1428     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1429     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1430     03C7  0867               	movf	_centenas,w
  1431     03C8  3E30               	addlw	48
  1432     03C9  00C7               	movwf	main@valor_c
  1433     03CA                     l1833:
  1434                           
  1435                           ;Main_master.c: 142:         Lcd_Write_Char(valor_c);
  1436     03CA  0847               	movf	main@valor_c,w
  1437     03CB  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1438     03D0                     l1835:
  1439                           
  1440                           ;Main_master.c: 144:         Lcd_Set_Cursor(2,2);
  1441     03D0  3002               	movlw	2
  1442     03D1  00F4               	movwf	Lcd_Set_Cursor@b
  1443     03D2  3002               	movlw	2
  1444     03D3  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1445     03D8                     l1837:
  1446                           
  1447                           ;Main_master.c: 145:         Lcd_Write_Char('.');
  1448     03D8  302E               	movlw	46
  1449     03D9  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1450     03DE                     l1839:
  1451                           
  1452                           ;Main_master.c: 147:         Lcd_Set_Cursor(2,3);
  1453     03DE  3003               	movlw	3
  1454     03DF  00F4               	movwf	Lcd_Set_Cursor@b
  1455     03E0  3002               	movlw	2
  1456     03E1  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1457     03E6                     l1841:
  1458                           
  1459                           ;Main_master.c: 148:         char valor_d = decenas + '0';
  1460     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1461     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1462     03E8  0866               	movf	_decenas,w
  1463     03E9  3E30               	addlw	48
  1464     03EA  00C8               	movwf	main@valor_d
  1465     03EB                     l1843:
  1466                           
  1467                           ;Main_master.c: 149:         Lcd_Write_Char(valor_d);
  1468     03EB  0848               	movf	main@valor_d,w
  1469     03EC  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1470     03F1                     l1845:
  1471                           
  1472                           ;Main_master.c: 151:         Lcd_Set_Cursor(2,4);
  1473     03F1  3004               	movlw	4
  1474     03F2  00F4               	movwf	Lcd_Set_Cursor@b
  1475     03F3  3002               	movlw	2
  1476     03F4  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1477     03F9                     l1847:
  1478                           
  1479                           ;Main_master.c: 152:         char valor_u = unidades + '0';
  1480     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1481     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1482     03FB  0865               	movf	_unidades,w
  1483     03FC  3E30               	addlw	48
  1484     03FD  00C9               	movwf	main@valor_u
  1485     03FE                     l1849:
  1486                           
  1487                           ;Main_master.c: 153:         Lcd_Write_Char(valor_u);
  1488     03FE  0849               	movf	main@valor_u,w
  1489     03FF  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1490     0404                     l1851:
  1491                           
  1492                           ;Main_master.c: 155:         Lcd_Set_Cursor(1,6);
  1493     0404  3006               	movlw	6
  1494     0405  00F4               	movwf	Lcd_Set_Cursor@b
  1495     0406  3001               	movlw	1
  1496     0407  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1497     040C                     l1853:
  1498                           
  1499                           ;Main_master.c: 156:         Lcd_Write_String("Pot2");
  1500     040C  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1501     040D  120A  158A  2650  120A  118A  	fcall	_Lcd_Write_String
  1502     0412                     l1855:
  1503                           
  1504                           ;Main_master.c: 158:         Lcd_Set_Cursor(2,6);
  1505     0412  3006               	movlw	6
  1506     0413  00F4               	movwf	Lcd_Set_Cursor@b
  1507     0414  3002               	movlw	2
  1508     0415  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1509     041A                     l1857:
  1510                           
  1511                           ;Main_master.c: 159:         char valor_c2 = centenas2 + '0';
  1512     041A  1283               	bcf	3,5	;RP0=0, select bank0
  1513     041B  1303               	bcf	3,6	;RP1=0, select bank0
  1514     041C  0863               	movf	_centenas2,w
  1515     041D  3E30               	addlw	48
  1516     041E  00CA               	movwf	main@valor_c2
  1517                           
  1518                           ;Main_master.c: 160:         Lcd_Write_Char(valor_c2);
  1519     041F  084A               	movf	main@valor_c2,w
  1520     0420  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1521                           
  1522                           ;Main_master.c: 162:         Lcd_Set_Cursor(2,7);
  1523     0425  3007               	movlw	7
  1524     0426  00F4               	movwf	Lcd_Set_Cursor@b
  1525     0427  3002               	movlw	2
  1526     0428  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1527                           
  1528                           ;Main_master.c: 163:         Lcd_Write_Char('.');
  1529     042D  302E               	movlw	46
  1530     042E  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1531                           
  1532                           ;Main_master.c: 165:         Lcd_Set_Cursor(2,8);
  1533     0433  3008               	movlw	8
  1534     0434  00F4               	movwf	Lcd_Set_Cursor@b
  1535     0435  3002               	movlw	2
  1536     0436  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1537     043B                     l1859:
  1538                           
  1539                           ;Main_master.c: 166:         char valor_d2 = decenas2 + '0';
  1540     043B  1283               	bcf	3,5	;RP0=0, select bank0
  1541     043C  1303               	bcf	3,6	;RP1=0, select bank0
  1542     043D  0862               	movf	_decenas2,w
  1543     043E  3E30               	addlw	48
  1544     043F  00CB               	movwf	main@valor_d2
  1545     0440                     l1861:
  1546                           
  1547                           ;Main_master.c: 167:         Lcd_Write_Char(valor_d2);
  1548     0440  084B               	movf	main@valor_d2,w
  1549     0441  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1550     0446                     l1863:
  1551                           
  1552                           ;Main_master.c: 169:         Lcd_Set_Cursor(2,9);
  1553     0446  3009               	movlw	9
  1554     0447  00F4               	movwf	Lcd_Set_Cursor@b
  1555     0448  3002               	movlw	2
  1556     0449  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1557     044E                     l1865:
  1558                           
  1559                           ;Main_master.c: 170:         char valor_u2 = unidades2 + '0';
  1560     044E  1283               	bcf	3,5	;RP0=0, select bank0
  1561     044F  1303               	bcf	3,6	;RP1=0, select bank0
  1562     0450  0861               	movf	_unidades2,w
  1563     0451  3E30               	addlw	48
  1564     0452  00CC               	movwf	main@valor_u2
  1565                           
  1566                           ;Main_master.c: 171:         Lcd_Write_Char(valor_u2);
  1567     0453  084C               	movf	main@valor_u2,w
  1568     0454  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1569                           
  1570                           ;Main_master.c: 173:         Lcd_Set_Cursor(1,11);
  1571     0459  300B               	movlw	11
  1572     045A  00F4               	movwf	Lcd_Set_Cursor@b
  1573     045B  3001               	movlw	1
  1574     045C  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1575     0461                     l1867:
  1576                           
  1577                           ;Main_master.c: 174:         Lcd_Write_String("Cont");
  1578     0461  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1579     0462  120A  158A  2650  120A  118A  	fcall	_Lcd_Write_String
  1580     0467                     l1869:
  1581                           
  1582                           ;Main_master.c: 176:         Lcd_Set_Cursor(2,11);
  1583     0467  300B               	movlw	11
  1584     0468  00F4               	movwf	Lcd_Set_Cursor@b
  1585     0469  3002               	movlw	2
  1586     046A  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1587     046F                     l1871:
  1588                           
  1589                           ;Main_master.c: 177:         char valor_c3 = centenas3 + '0';
  1590     046F  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0470  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0471  085F               	movf	_centenas3,w
  1593     0472  3E30               	addlw	48
  1594     0473  00CD               	movwf	main@valor_c3
  1595     0474                     l1873:
  1596                           
  1597                           ;Main_master.c: 178:         Lcd_Write_Char(valor_c3);
  1598     0474  084D               	movf	main@valor_c3,w
  1599     0475  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1600     047A                     l1875:
  1601                           
  1602                           ;Main_master.c: 180:         Lcd_Set_Cursor(2,12);
  1603     047A  300C               	movlw	12
  1604     047B  00F4               	movwf	Lcd_Set_Cursor@b
  1605     047C  3002               	movlw	2
  1606     047D  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1607     0482                     l1877:
  1608                           
  1609                           ;Main_master.c: 181:         char valor_d3 = decenas3 + '0';
  1610     0482  1283               	bcf	3,5	;RP0=0, select bank0
  1611     0483  1303               	bcf	3,6	;RP1=0, select bank0
  1612     0484  085E               	movf	_decenas3,w
  1613     0485  3E30               	addlw	48
  1614     0486  00CE               	movwf	main@valor_d3
  1615     0487                     l1879:
  1616                           
  1617                           ;Main_master.c: 182:         Lcd_Write_Char(valor_d3);
  1618     0487  084E               	movf	main@valor_d3,w
  1619     0488  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1620     048D                     l1881:
  1621                           
  1622                           ;Main_master.c: 184:         Lcd_Set_Cursor(2,13);
  1623     048D  300D               	movlw	13
  1624     048E  00F4               	movwf	Lcd_Set_Cursor@b
  1625     048F  3002               	movlw	2
  1626     0490  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1627     0495                     l1883:
  1628                           
  1629                           ;Main_master.c: 185:         char valor_u3 = unidades3 + '0';
  1630     0495  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0496  1303               	bcf	3,6	;RP1=0, select bank0
  1632     0497  085D               	movf	_unidades3,w
  1633     0498  3E30               	addlw	48
  1634     0499  00CF               	movwf	main@valor_u3
  1635     049A                     l1885:
  1636                           
  1637                           ;Main_master.c: 186:         Lcd_Write_Char(valor_u3);
  1638     049A  084F               	movf	main@valor_u3,w
  1639     049B  120A  158A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  1640     04A0                     l1887:
  1641                           
  1642                           ;Main_master.c: 190:          _delay((unsigned long)((50)*(8000000/4000.0)));
  1643     04A0  3082               	movlw	130
  1644     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1645     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1646     04A3  00C5               	movwf	??_main+1
  1647     04A4  30DD               	movlw	221
  1648     04A5  00C4               	movwf	??_main
  1649     04A6                     u1897:
  1650     04A6  0BC4               	decfsz	??_main,f
  1651     04A7  2CA6               	goto	u1897
  1652     04A8  0BC5               	decfsz	??_main+1,f
  1653     04A9  2CA6               	goto	u1897
  1654     04AA  29EC               	goto	l1763
  1655     04AB  120A  118A  2800   	ljmp	start
  1656     04AE                     __end_of_main:
  1657                           
  1658                           	psect	text1
  1659     0DBC                     __ptext1:	
  1660 ;; *************** function _spiWrite *****************
  1661 ;; Defined at:
  1662 ;;		line 31 in file "SPI.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  dat             1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  dat             1    0[COMMON] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0
  1679 ;;      Totals:         1       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689     0DBC                     _spiWrite:	
  1690                           ;psect for function _spiWrite
  1691                           
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _spiWrite: [wreg]
  1695                           ;spiWrite@dat stored from wreg
  1696     0DBC  00F0               	movwf	spiWrite@dat
  1697     0DBD                     l1493:
  1698                           
  1699                           ;SPI.c: 31: void spiWrite(char dat);SPI.c: 32: {;SPI.c: 33:     SSPBUF = dat;
  1700     0DBD  0870               	movf	spiWrite@dat,w
  1701     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  1702     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  1703     0DC0  0093               	movwf	19	;volatile
  1704     0DC1                     l134:
  1705     0DC1  0008               	return
  1706     0DC2                     __end_of_spiWrite:
  1707                           
  1708                           	psect	text2
  1709     0DD1                     __ptext2:	
  1710 ;; *************** function _spiRead *****************
  1711 ;; Defined at:
  1712 ;;		line 44 in file "SPI.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      unsigned char 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0
  1729 ;;      Totals:         0       0       0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 1
  1733 ;; This function calls:
  1734 ;;		_spiReceiveWait
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740     0DD1                     _spiRead:	
  1741                           ;psect for function _spiRead
  1742                           
  1743     0DD1                     l1495:	
  1744                           ;incstack = 0
  1745                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1746                           
  1747                           
  1748                           ;SPI.c: 46:     spiReceiveWait();
  1749     0DD1  120A  158A  25C2  120A  158A  	fcall	_spiReceiveWait
  1750     0DD6                     l1497:
  1751                           
  1752                           ;SPI.c: 47:     return(SSPBUF);
  1753     0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1754     0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  1755     0DD8  0813               	movf	19,w	;volatile
  1756     0DD9                     l142:
  1757     0DD9  0008               	return
  1758     0DDA                     __end_of_spiRead:
  1759                           
  1760                           	psect	text3
  1761     0DC2                     __ptext3:	
  1762 ;; *************** function _spiReceiveWait *****************
  1763 ;; Defined at:
  1764 ;;		line 26 in file "SPI.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		None
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0
  1781 ;;      Totals:         0       0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_spiRead
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791     0DC2                     _spiReceiveWait:	
  1792                           ;psect for function _spiReceiveWait
  1793                           
  1794     0DC2                     l1359:	
  1795                           ;incstack = 0
  1796                           ; Regs used in _spiReceiveWait: []
  1797                           
  1798     0DC2                     l128:	
  1799                           ;SPI.c: 28:     while ( !SSPSTATbits.BF );
  1800                           
  1801     0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  1802     0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  1803     0DC4  1C14               	btfss	20,0	;volatile
  1804     0DC5  2DC7               	goto	u901
  1805     0DC6  2DC8               	goto	u900
  1806     0DC7                     u901:
  1807     0DC7  2DC2               	goto	l128
  1808     0DC8                     u900:
  1809     0DC8                     l131:
  1810     0DC8  0008               	return
  1811     0DC9                     __end_of_spiReceiveWait:
  1812                           
  1813                           	psect	text4
  1814     0E2D                     __ptext4:	
  1815 ;; *************** function _setup *****************
  1816 ;; Defined at:
  1817 ;;		line 199 in file "Main_master.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 1
  1838 ;; This function calls:
  1839 ;;		_spiInit
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845     0E2D                     _setup:	
  1846                           ;psect for function _setup
  1847                           
  1848     0E2D                     l1467:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1851                           
  1852                           
  1853                           ;Main_master.c: 200:     ANSEL = 0;
  1854     0E2D  1683               	bsf	3,5	;RP0=1, select bank3
  1855     0E2E  1703               	bsf	3,6	;RP1=1, select bank3
  1856     0E2F  0188               	clrf	8	;volatile
  1857                           
  1858                           ;Main_master.c: 201:     ANSELH = 0;
  1859     0E30  0189               	clrf	9	;volatile
  1860                           
  1861                           ;Main_master.c: 202:     TRISA = 0;
  1862     0E31  1683               	bsf	3,5	;RP0=1, select bank1
  1863     0E32  1303               	bcf	3,6	;RP1=0, select bank1
  1864     0E33  0185               	clrf	5	;volatile
  1865     0E34                     l1469:
  1866                           
  1867                           ;Main_master.c: 203:     TRISC2 = 0;
  1868     0E34  1107               	bcf	7,2	;volatile
  1869     0E35                     l1471:
  1870                           
  1871                           ;Main_master.c: 204:     TRISC1 = 0;
  1872     0E35  1087               	bcf	7,1	;volatile
  1873                           
  1874                           ;Main_master.c: 205:     TRISB = 0;
  1875     0E36  0186               	clrf	6	;volatile
  1876                           
  1877                           ;Main_master.c: 206:     TRISD = 0;
  1878     0E37  0188               	clrf	8	;volatile
  1879                           
  1880                           ;Main_master.c: 207:     TRISE = 0;
  1881     0E38  0189               	clrf	9	;volatile
  1882                           
  1883                           ;Main_master.c: 209:     PORTA = 0;
  1884     0E39  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0E3B  0185               	clrf	5	;volatile
  1887                           
  1888                           ;Main_master.c: 210:     PORTB = 0;
  1889     0E3C  0186               	clrf	6	;volatile
  1890                           
  1891                           ;Main_master.c: 211:     PORTD = 0;
  1892     0E3D  0188               	clrf	8	;volatile
  1893                           
  1894                           ;Main_master.c: 212:     PORTE = 0;
  1895     0E3E  0189               	clrf	9	;volatile
  1896     0E3F                     l1473:
  1897                           
  1898                           ;Main_master.c: 213:     PORTCbits.RC2 = 1;
  1899     0E3F  1507               	bsf	7,2	;volatile
  1900     0E40                     l1475:
  1901                           
  1902                           ;Main_master.c: 214:     PORTCbits.RC1 = 1;
  1903     0E40  1487               	bsf	7,1	;volatile
  1904     0E41                     l1477:
  1905                           
  1906                           ;Main_master.c: 217:     OSCCONbits.IRCF = 0b111;
  1907     0E41  3070               	movlw	112
  1908     0E42  1683               	bsf	3,5	;RP0=1, select bank1
  1909     0E43  1303               	bcf	3,6	;RP1=0, select bank1
  1910     0E44  048F               	iorwf	15,f	;volatile
  1911     0E45                     l1479:
  1912                           
  1913                           ;Main_master.c: 218:     OSCCONbits.SCS = 1;
  1914     0E45  140F               	bsf	15,0	;volatile
  1915     0E46                     l1481:
  1916                           
  1917                           ;Main_master.c: 220:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1918     0E46  01F0               	clrf	spiInit@sDataSample
  1919     0E47  01F1               	clrf	spiInit@sClockIdle
  1920     0E48  01F2               	clrf	spiInit@sTransmitEdge
  1921     0E49  3020               	movlw	32
  1922     0E4A  120A  158A  25FD  120A  158A  	fcall	_spiInit
  1923     0E4F                     l99:
  1924     0E4F  0008               	return
  1925     0E50                     __end_of_setup:
  1926                           
  1927                           	psect	text5
  1928     0DFD                     __ptext5:	
  1929 ;; *************** function _spiInit *****************
  1930 ;; Defined at:
  1931 ;;		line 9 in file "SPI.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  sType           1    wreg     enum E1292
  1934 ;;  sDataSample     1    0[COMMON] enum E1300
  1935 ;;  sClockIdle      1    1[COMMON] enum E1304
  1936 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  sType           1    3[COMMON] enum E1292
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         3       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0
  1951 ;;      Totals:         4       0       0       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_setup
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961     0DFD                     _spiInit:	
  1962                           ;psect for function _spiInit
  1963                           
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1967                           ;spiInit@sType stored from wreg
  1968     0DFD  00F3               	movwf	spiInit@sType
  1969     0DFE                     l1349:
  1970                           
  1971                           ;SPI.c: 9: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 10: {;SPI.c: 11:     TRISC5 = 0;
  1972     0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1973     0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1974     0E00  1287               	bcf	7,5	;volatile
  1975                           
  1976                           ;SPI.c: 12:     if(sType & 0b00000100)
  1977     0E01  1D73               	btfss	spiInit@sType,2
  1978     0E02  2E04               	goto	u891
  1979     0E03  2E05               	goto	u890
  1980     0E04                     u891:
  1981     0E04  2E09               	goto	l1355
  1982     0E05                     u890:
  1983     0E05                     l1351:
  1984                           
  1985                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sTransmitEdge;
  1986     0E05  0872               	movf	spiInit@sTransmitEdge,w
  1987     0E06  0094               	movwf	20	;volatile
  1988     0E07                     l1353:
  1989                           
  1990                           ;SPI.c: 15:         TRISC3 = 1;
  1991     0E07  1587               	bsf	7,3	;volatile
  1992                           
  1993                           ;SPI.c: 16:     }
  1994     0E08  2E0D               	goto	l124
  1995     0E09                     l1355:
  1996                           
  1997                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
  1998     0E09  0870               	movf	spiInit@sDataSample,w
  1999     0E0A  0472               	iorwf	spiInit@sTransmitEdge,w
  2000     0E0B  0094               	movwf	20	;volatile
  2001     0E0C                     l1357:
  2002                           
  2003                           ;SPI.c: 20:         TRISC3 = 0;
  2004     0E0C  1187               	bcf	7,3	;volatile
  2005     0E0D                     l124:	
  2006                           ;SPI.c: 21:     }
  2007                           
  2008                           
  2009                           ;SPI.c: 23:     SSPCON = sType | sClockIdle;
  2010     0E0D  0873               	movf	spiInit@sType,w
  2011     0E0E  0471               	iorwf	spiInit@sClockIdle,w
  2012     0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0E10  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0E11  0094               	movwf	20	;volatile
  2015     0E12                     l125:
  2016     0E12  0008               	return
  2017     0E13                     __end_of_spiInit:
  2018                           
  2019                           	psect	text6
  2020     0F5A                     __ptext6:	
  2021 ;; *************** function _displays3 *****************
  2022 ;; Defined at:
  2023 ;;		line 249 in file "Main_master.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  num             2    9[COMMON] int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         2       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          2       0       0       0       0
  2040 ;;      Totals:         4       0       0       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 1
  2044 ;; This function calls:
  2045 ;;		___awdiv
  2046 ;;		___awmod
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052     0F5A                     _displays3:	
  2053                           ;psect for function _displays3
  2054                           
  2055     0F5A                     l1513:	
  2056                           ;incstack = 0
  2057                           ; Regs used in _displays3: [wreg+status,2+status,0+pclath+cstack]
  2058                           
  2059                           
  2060                           ;Main_master.c: 249: void displays3(int num);Main_master.c: 250: {;Main_master.c: 251:  
      +                             centenas3= (uint8_t)(num/100);
  2061     0F5A  3064               	movlw	100
  2062     0F5B  00F0               	movwf	___awdiv@divisor
  2063     0F5C  3000               	movlw	0
  2064     0F5D  00F1               	movwf	___awdiv@divisor+1
  2065     0F5E  087A               	movf	displays3@num+1,w
  2066     0F5F  00F3               	movwf	___awdiv@dividend+1
  2067     0F60  0879               	movf	displays3@num,w
  2068     0F61  00F2               	movwf	___awdiv@dividend
  2069     0F62  120A  118A  204B  120A  158A  	fcall	___awdiv
  2070     0F67  0870               	movf	?___awdiv,w
  2071     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  2072     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  2073     0F6A  00DF               	movwf	_centenas3
  2074                           
  2075                           ;Main_master.c: 252:     residuo3 = num%100;
  2076     0F6B  3064               	movlw	100
  2077     0F6C  00F0               	movwf	___awmod@divisor
  2078     0F6D  3000               	movlw	0
  2079     0F6E  00F1               	movwf	___awmod@divisor+1
  2080     0F6F  087A               	movf	displays3@num+1,w
  2081     0F70  00F3               	movwf	___awmod@dividend+1
  2082     0F71  0879               	movf	displays3@num,w
  2083     0F72  00F2               	movwf	___awmod@dividend
  2084     0F73  120A  158A  27A7  120A  158A  	fcall	___awmod
  2085     0F78  0870               	movf	?___awmod,w
  2086     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  2087     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  2088     0F7B  00DC               	movwf	_residuo3
  2089                           
  2090                           ;Main_master.c: 254:     decenas3 = residuo3 /10;
  2091     0F7C  300A               	movlw	10
  2092     0F7D  00F0               	movwf	___awdiv@divisor
  2093     0F7E  3000               	movlw	0
  2094     0F7F  00F1               	movwf	___awdiv@divisor+1
  2095     0F80  085C               	movf	_residuo3,w
  2096     0F81  00FB               	movwf	??_displays3
  2097     0F82  01FC               	clrf	??_displays3+1
  2098     0F83  087B               	movf	??_displays3,w
  2099     0F84  00F2               	movwf	___awdiv@dividend
  2100     0F85  087C               	movf	??_displays3+1,w
  2101     0F86  00F3               	movwf	___awdiv@dividend+1
  2102     0F87  120A  118A  204B  120A  158A  	fcall	___awdiv
  2103     0F8C  0870               	movf	?___awdiv,w
  2104     0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2105     0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2106     0F8F  00DE               	movwf	_decenas3
  2107                           
  2108                           ;Main_master.c: 255:     residuo3 = residuo3 % 10;
  2109     0F90  300A               	movlw	10
  2110     0F91  00F0               	movwf	___awmod@divisor
  2111     0F92  3000               	movlw	0
  2112     0F93  00F1               	movwf	___awmod@divisor+1
  2113     0F94  085C               	movf	_residuo3,w
  2114     0F95  00FB               	movwf	??_displays3
  2115     0F96  01FC               	clrf	??_displays3+1
  2116     0F97  087B               	movf	??_displays3,w
  2117     0F98  00F2               	movwf	___awmod@dividend
  2118     0F99  087C               	movf	??_displays3+1,w
  2119     0F9A  00F3               	movwf	___awmod@dividend+1
  2120     0F9B  120A  158A  27A7  120A  158A  	fcall	___awmod
  2121     0FA0  0870               	movf	?___awmod,w
  2122     0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  2123     0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  2124     0FA3  00DC               	movwf	_residuo3
  2125     0FA4                     l1515:
  2126                           
  2127                           ;Main_master.c: 257:     unidades3 = residuo3;
  2128     0FA4  085C               	movf	_residuo3,w
  2129     0FA5  00DD               	movwf	_unidades3
  2130     0FA6                     l108:
  2131     0FA6  0008               	return
  2132     0FA7                     __end_of_displays3:
  2133                           
  2134                           	psect	text7
  2135     0F0D                     __ptext7:	
  2136 ;; *************** function _displays2 *****************
  2137 ;; Defined at:
  2138 ;;		line 236 in file "Main_master.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  num             2    9[COMMON] int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         2       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0
  2154 ;;      Temps:          2       0       0       0       0
  2155 ;;      Totals:         4       0       0       0       0
  2156 ;;Total ram usage:        4 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 1
  2159 ;; This function calls:
  2160 ;;		___awdiv
  2161 ;;		___awmod
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167     0F0D                     _displays2:	
  2168                           ;psect for function _displays2
  2169                           
  2170     0F0D                     l1507:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _displays2: [wreg+status,2+status,0+pclath+cstack]
  2173                           
  2174                           
  2175                           ;Main_master.c: 236: void displays2(int num);Main_master.c: 237: {;Main_master.c: 238:  
      +                             centenas2= (uint8_t)(num/100);
  2176     0F0D  3064               	movlw	100
  2177     0F0E  00F0               	movwf	___awdiv@divisor
  2178     0F0F  3000               	movlw	0
  2179     0F10  00F1               	movwf	___awdiv@divisor+1
  2180     0F11  087A               	movf	displays2@num+1,w
  2181     0F12  00F3               	movwf	___awdiv@dividend+1
  2182     0F13  0879               	movf	displays2@num,w
  2183     0F14  00F2               	movwf	___awdiv@dividend
  2184     0F15  120A  118A  204B  120A  158A  	fcall	___awdiv
  2185     0F1A  0870               	movf	?___awdiv,w
  2186     0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0F1D  00E3               	movwf	_centenas2
  2189                           
  2190                           ;Main_master.c: 239:     residuo2 = num%100;
  2191     0F1E  3064               	movlw	100
  2192     0F1F  00F0               	movwf	___awmod@divisor
  2193     0F20  3000               	movlw	0
  2194     0F21  00F1               	movwf	___awmod@divisor+1
  2195     0F22  087A               	movf	displays2@num+1,w
  2196     0F23  00F3               	movwf	___awmod@dividend+1
  2197     0F24  0879               	movf	displays2@num,w
  2198     0F25  00F2               	movwf	___awmod@dividend
  2199     0F26  120A  158A  27A7  120A  158A  	fcall	___awmod
  2200     0F2B  0870               	movf	?___awmod,w
  2201     0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0F2E  00E0               	movwf	_residuo2
  2204                           
  2205                           ;Main_master.c: 241:     decenas2 = residuo2 /10;
  2206     0F2F  300A               	movlw	10
  2207     0F30  00F0               	movwf	___awdiv@divisor
  2208     0F31  3000               	movlw	0
  2209     0F32  00F1               	movwf	___awdiv@divisor+1
  2210     0F33  0860               	movf	_residuo2,w
  2211     0F34  00FB               	movwf	??_displays2
  2212     0F35  01FC               	clrf	??_displays2+1
  2213     0F36  087B               	movf	??_displays2,w
  2214     0F37  00F2               	movwf	___awdiv@dividend
  2215     0F38  087C               	movf	??_displays2+1,w
  2216     0F39  00F3               	movwf	___awdiv@dividend+1
  2217     0F3A  120A  118A  204B  120A  158A  	fcall	___awdiv
  2218     0F3F  0870               	movf	?___awdiv,w
  2219     0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2220     0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2221     0F42  00E2               	movwf	_decenas2
  2222                           
  2223                           ;Main_master.c: 242:     residuo2 = residuo2 % 10;
  2224     0F43  300A               	movlw	10
  2225     0F44  00F0               	movwf	___awmod@divisor
  2226     0F45  3000               	movlw	0
  2227     0F46  00F1               	movwf	___awmod@divisor+1
  2228     0F47  0860               	movf	_residuo2,w
  2229     0F48  00FB               	movwf	??_displays2
  2230     0F49  01FC               	clrf	??_displays2+1
  2231     0F4A  087B               	movf	??_displays2,w
  2232     0F4B  00F2               	movwf	___awmod@dividend
  2233     0F4C  087C               	movf	??_displays2+1,w
  2234     0F4D  00F3               	movwf	___awmod@dividend+1
  2235     0F4E  120A  158A  27A7  120A  158A  	fcall	___awmod
  2236     0F53  0870               	movf	?___awmod,w
  2237     0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0F56  00E0               	movwf	_residuo2
  2240     0F57                     l1509:
  2241                           
  2242                           ;Main_master.c: 244:     unidades2 = residuo2;
  2243     0F57  0860               	movf	_residuo2,w
  2244     0F58  00E1               	movwf	_unidades2
  2245     0F59                     l105:
  2246     0F59  0008               	return
  2247     0F5A                     __end_of_displays2:
  2248                           
  2249                           	psect	text8
  2250     0EC0                     __ptext8:	
  2251 ;; *************** function _displays *****************
  2252 ;; Defined at:
  2253 ;;		line 224 in file "Main_master.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  num             2    9[COMMON] int 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         2       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          2       0       0       0       0
  2270 ;;      Totals:         4       0       0       0       0
  2271 ;;Total ram usage:        4 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 1
  2274 ;; This function calls:
  2275 ;;		___awdiv
  2276 ;;		___awmod
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282     0EC0                     _displays:	
  2283                           ;psect for function _displays
  2284                           
  2285     0EC0                     l1501:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _displays: [wreg+status,2+status,0+pclath+cstack]
  2288                           
  2289                           
  2290                           ;Main_master.c: 224: void displays(int num);Main_master.c: 225: {;Main_master.c: 226:   
      +                            centenas= (uint8_t)(num/100);
  2291     0EC0  3064               	movlw	100
  2292     0EC1  00F0               	movwf	___awdiv@divisor
  2293     0EC2  3000               	movlw	0
  2294     0EC3  00F1               	movwf	___awdiv@divisor+1
  2295     0EC4  087A               	movf	displays@num+1,w
  2296     0EC5  00F3               	movwf	___awdiv@dividend+1
  2297     0EC6  0879               	movf	displays@num,w
  2298     0EC7  00F2               	movwf	___awdiv@dividend
  2299     0EC8  120A  118A  204B  120A  158A  	fcall	___awdiv
  2300     0ECD  0870               	movf	?___awdiv,w
  2301     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2302     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2303     0ED0  00E7               	movwf	_centenas
  2304                           
  2305                           ;Main_master.c: 227:     residuo = num%100;
  2306     0ED1  3064               	movlw	100
  2307     0ED2  00F0               	movwf	___awmod@divisor
  2308     0ED3  3000               	movlw	0
  2309     0ED4  00F1               	movwf	___awmod@divisor+1
  2310     0ED5  087A               	movf	displays@num+1,w
  2311     0ED6  00F3               	movwf	___awmod@dividend+1
  2312     0ED7  0879               	movf	displays@num,w
  2313     0ED8  00F2               	movwf	___awmod@dividend
  2314     0ED9  120A  158A  27A7  120A  158A  	fcall	___awmod
  2315     0EDE  0870               	movf	?___awmod,w
  2316     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2317     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2318     0EE1  00E4               	movwf	_residuo
  2319                           
  2320                           ;Main_master.c: 229:     decenas = residuo /10;
  2321     0EE2  300A               	movlw	10
  2322     0EE3  00F0               	movwf	___awdiv@divisor
  2323     0EE4  3000               	movlw	0
  2324     0EE5  00F1               	movwf	___awdiv@divisor+1
  2325     0EE6  0864               	movf	_residuo,w
  2326     0EE7  00FB               	movwf	??_displays
  2327     0EE8  01FC               	clrf	??_displays+1
  2328     0EE9  087B               	movf	??_displays,w
  2329     0EEA  00F2               	movwf	___awdiv@dividend
  2330     0EEB  087C               	movf	??_displays+1,w
  2331     0EEC  00F3               	movwf	___awdiv@dividend+1
  2332     0EED  120A  118A  204B  120A  158A  	fcall	___awdiv
  2333     0EF2  0870               	movf	?___awdiv,w
  2334     0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  2335     0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  2336     0EF5  00E6               	movwf	_decenas
  2337                           
  2338                           ;Main_master.c: 230:     residuo = residuo % 10;
  2339     0EF6  300A               	movlw	10
  2340     0EF7  00F0               	movwf	___awmod@divisor
  2341     0EF8  3000               	movlw	0
  2342     0EF9  00F1               	movwf	___awmod@divisor+1
  2343     0EFA  0864               	movf	_residuo,w
  2344     0EFB  00FB               	movwf	??_displays
  2345     0EFC  01FC               	clrf	??_displays+1
  2346     0EFD  087B               	movf	??_displays,w
  2347     0EFE  00F2               	movwf	___awmod@dividend
  2348     0EFF  087C               	movf	??_displays+1,w
  2349     0F00  00F3               	movwf	___awmod@dividend+1
  2350     0F01  120A  158A  27A7  120A  158A  	fcall	___awmod
  2351     0F06  0870               	movf	?___awmod,w
  2352     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2353     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2354     0F09  00E4               	movwf	_residuo
  2355     0F0A                     l1503:
  2356                           
  2357                           ;Main_master.c: 232:     unidades = residuo;
  2358     0F0A  0864               	movf	_residuo,w
  2359     0F0B  00E5               	movwf	_unidades
  2360     0F0C                     l102:
  2361     0F0C  0008               	return
  2362     0F0D                     __end_of_displays:
  2363                           
  2364                           	psect	text9
  2365     0FA7                     __ptext9:	
  2366 ;; *************** function ___awmod *****************
  2367 ;; Defined at:
  2368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  divisor         2    0[COMMON] int 
  2371 ;;  dividend        2    2[COMMON] int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  sign            1    6[COMMON] unsigned char 
  2374 ;;  counter         1    5[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2    0[COMMON] int 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         4       0       0       0       0
  2385 ;;      Locals:         2       0       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         7       0       0       0       0
  2388 ;;Total ram usage:        7 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_displays
  2394 ;;		_displays2
  2395 ;;		_displays3
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     0FA7                     ___awmod:	
  2400                           ;psect for function ___awmod
  2401                           
  2402     0FA7                     l1415:	
  2403                           ;incstack = 0
  2404                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2405                           
  2406     0FA7  01F6               	clrf	___awmod@sign
  2407     0FA8                     l1417:
  2408     0FA8  1FF3               	btfss	___awmod@dividend+1,7
  2409     0FA9  2FAB               	goto	u1011
  2410     0FAA  2FAC               	goto	u1010
  2411     0FAB                     u1011:
  2412     0FAB  2FB3               	goto	l1423
  2413     0FAC                     u1010:
  2414     0FAC                     l1419:
  2415     0FAC  09F2               	comf	___awmod@dividend,f
  2416     0FAD  09F3               	comf	___awmod@dividend+1,f
  2417     0FAE  0AF2               	incf	___awmod@dividend,f
  2418     0FAF  1903               	skipnz
  2419     0FB0  0AF3               	incf	___awmod@dividend+1,f
  2420     0FB1                     l1421:
  2421     0FB1  01F6               	clrf	___awmod@sign
  2422     0FB2  0AF6               	incf	___awmod@sign,f
  2423     0FB3                     l1423:
  2424     0FB3  1FF1               	btfss	___awmod@divisor+1,7
  2425     0FB4  2FB6               	goto	u1021
  2426     0FB5  2FB7               	goto	u1020
  2427     0FB6                     u1021:
  2428     0FB6  2FBC               	goto	l1427
  2429     0FB7                     u1020:
  2430     0FB7                     l1425:
  2431     0FB7  09F0               	comf	___awmod@divisor,f
  2432     0FB8  09F1               	comf	___awmod@divisor+1,f
  2433     0FB9  0AF0               	incf	___awmod@divisor,f
  2434     0FBA  1903               	skipnz
  2435     0FBB  0AF1               	incf	___awmod@divisor+1,f
  2436     0FBC                     l1427:
  2437     0FBC  0870               	movf	___awmod@divisor,w
  2438     0FBD  0471               	iorwf	___awmod@divisor+1,w
  2439     0FBE  1903               	btfsc	3,2
  2440     0FBF  2FC1               	goto	u1031
  2441     0FC0  2FC2               	goto	u1030
  2442     0FC1                     u1031:
  2443     0FC1  2FF1               	goto	l1445
  2444     0FC2                     u1030:
  2445     0FC2                     l1429:
  2446     0FC2  01F5               	clrf	___awmod@counter
  2447     0FC3  0AF5               	incf	___awmod@counter,f
  2448     0FC4  2FD0               	goto	l1435
  2449     0FC5                     l1431:
  2450     0FC5  3001               	movlw	1
  2451     0FC6                     u1045:
  2452     0FC6  1003               	clrc
  2453     0FC7  0DF0               	rlf	___awmod@divisor,f
  2454     0FC8  0DF1               	rlf	___awmod@divisor+1,f
  2455     0FC9  3EFF               	addlw	-1
  2456     0FCA  1D03               	skipz
  2457     0FCB  2FC6               	goto	u1045
  2458     0FCC                     l1433:
  2459     0FCC  3001               	movlw	1
  2460     0FCD  00F4               	movwf	??___awmod
  2461     0FCE  0874               	movf	??___awmod,w
  2462     0FCF  07F5               	addwf	___awmod@counter,f
  2463     0FD0                     l1435:
  2464     0FD0  1FF1               	btfss	___awmod@divisor+1,7
  2465     0FD1  2FD3               	goto	u1051
  2466     0FD2  2FD4               	goto	u1050
  2467     0FD3                     u1051:
  2468     0FD3  2FC5               	goto	l1431
  2469     0FD4                     u1050:
  2470     0FD4                     l1437:
  2471     0FD4  0871               	movf	___awmod@divisor+1,w
  2472     0FD5  0273               	subwf	___awmod@dividend+1,w
  2473     0FD6  1D03               	skipz
  2474     0FD7  2FDA               	goto	u1065
  2475     0FD8  0870               	movf	___awmod@divisor,w
  2476     0FD9  0272               	subwf	___awmod@dividend,w
  2477     0FDA                     u1065:
  2478     0FDA  1C03               	skipc
  2479     0FDB  2FDD               	goto	u1061
  2480     0FDC  2FDE               	goto	u1060
  2481     0FDD                     u1061:
  2482     0FDD  2FE4               	goto	l1441
  2483     0FDE                     u1060:
  2484     0FDE                     l1439:
  2485     0FDE  0870               	movf	___awmod@divisor,w
  2486     0FDF  02F2               	subwf	___awmod@dividend,f
  2487     0FE0  0871               	movf	___awmod@divisor+1,w
  2488     0FE1  1C03               	skipc
  2489     0FE2  03F3               	decf	___awmod@dividend+1,f
  2490     0FE3  02F3               	subwf	___awmod@dividend+1,f
  2491     0FE4                     l1441:
  2492     0FE4  3001               	movlw	1
  2493     0FE5                     u1075:
  2494     0FE5  1003               	clrc
  2495     0FE6  0CF1               	rrf	___awmod@divisor+1,f
  2496     0FE7  0CF0               	rrf	___awmod@divisor,f
  2497     0FE8  3EFF               	addlw	-1
  2498     0FE9  1D03               	skipz
  2499     0FEA  2FE5               	goto	u1075
  2500     0FEB                     l1443:
  2501     0FEB  3001               	movlw	1
  2502     0FEC  02F5               	subwf	___awmod@counter,f
  2503     0FED  1D03               	btfss	3,2
  2504     0FEE  2FF0               	goto	u1081
  2505     0FEF  2FF1               	goto	u1080
  2506     0FF0                     u1081:
  2507     0FF0  2FD4               	goto	l1437
  2508     0FF1                     u1080:
  2509     0FF1                     l1445:
  2510     0FF1  0876               	movf	___awmod@sign,w
  2511     0FF2  1903               	btfsc	3,2
  2512     0FF3  2FF5               	goto	u1091
  2513     0FF4  2FF6               	goto	u1090
  2514     0FF5                     u1091:
  2515     0FF5  2FFB               	goto	l1449
  2516     0FF6                     u1090:
  2517     0FF6                     l1447:
  2518     0FF6  09F2               	comf	___awmod@dividend,f
  2519     0FF7  09F3               	comf	___awmod@dividend+1,f
  2520     0FF8  0AF2               	incf	___awmod@dividend,f
  2521     0FF9  1903               	skipnz
  2522     0FFA  0AF3               	incf	___awmod@dividend+1,f
  2523     0FFB                     l1449:
  2524     0FFB  0873               	movf	___awmod@dividend+1,w
  2525     0FFC  00F1               	movwf	?___awmod+1
  2526     0FFD  0872               	movf	___awmod@dividend,w
  2527     0FFE  00F0               	movwf	?___awmod
  2528     0FFF                     l435:
  2529     0FFF  0008               	return
  2530     1000                     __end_of___awmod:
  2531                           
  2532                           	psect	text10
  2533     004B                     __ptext10:	
  2534 ;; *************** function ___awdiv *****************
  2535 ;; Defined at:
  2536 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  divisor         2    0[COMMON] int 
  2539 ;;  dividend        2    2[COMMON] int 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  quotient        2    7[COMMON] int 
  2542 ;;  sign            1    6[COMMON] unsigned char 
  2543 ;;  counter         1    5[COMMON] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2    0[COMMON] int 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         4       0       0       0       0
  2554 ;;      Locals:         4       0       0       0       0
  2555 ;;      Temps:          1       0       0       0       0
  2556 ;;      Totals:         9       0       0       0       0
  2557 ;;Total ram usage:        9 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_displays
  2563 ;;		_displays2
  2564 ;;		_displays3
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568     004B                     ___awdiv:	
  2569                           ;psect for function ___awdiv
  2570                           
  2571     004B                     l1371:	
  2572                           ;incstack = 0
  2573                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2574                           
  2575     004B  01F6               	clrf	___awdiv@sign
  2576     004C                     l1373:
  2577     004C  1FF1               	btfss	___awdiv@divisor+1,7
  2578     004D  284F               	goto	u911
  2579     004E  2850               	goto	u910
  2580     004F                     u911:
  2581     004F  2857               	goto	l1379
  2582     0050                     u910:
  2583     0050                     l1375:
  2584     0050  09F0               	comf	___awdiv@divisor,f
  2585     0051  09F1               	comf	___awdiv@divisor+1,f
  2586     0052  0AF0               	incf	___awdiv@divisor,f
  2587     0053  1903               	skipnz
  2588     0054  0AF1               	incf	___awdiv@divisor+1,f
  2589     0055                     l1377:
  2590     0055  01F6               	clrf	___awdiv@sign
  2591     0056  0AF6               	incf	___awdiv@sign,f
  2592     0057                     l1379:
  2593     0057  1FF3               	btfss	___awdiv@dividend+1,7
  2594     0058  285A               	goto	u921
  2595     0059  285B               	goto	u920
  2596     005A                     u921:
  2597     005A  2864               	goto	l1385
  2598     005B                     u920:
  2599     005B                     l1381:
  2600     005B  09F2               	comf	___awdiv@dividend,f
  2601     005C  09F3               	comf	___awdiv@dividend+1,f
  2602     005D  0AF2               	incf	___awdiv@dividend,f
  2603     005E  1903               	skipnz
  2604     005F  0AF3               	incf	___awdiv@dividend+1,f
  2605     0060                     l1383:
  2606     0060  3001               	movlw	1
  2607     0061  00F4               	movwf	??___awdiv
  2608     0062  0874               	movf	??___awdiv,w
  2609     0063  06F6               	xorwf	___awdiv@sign,f
  2610     0064                     l1385:
  2611     0064  01F7               	clrf	___awdiv@quotient
  2612     0065  01F8               	clrf	___awdiv@quotient+1
  2613     0066                     l1387:
  2614     0066  0870               	movf	___awdiv@divisor,w
  2615     0067  0471               	iorwf	___awdiv@divisor+1,w
  2616     0068  1903               	btfsc	3,2
  2617     0069  286B               	goto	u931
  2618     006A  286C               	goto	u930
  2619     006B                     u931:
  2620     006B  28A3               	goto	l1407
  2621     006C                     u930:
  2622     006C                     l1389:
  2623     006C  01F5               	clrf	___awdiv@counter
  2624     006D  0AF5               	incf	___awdiv@counter,f
  2625     006E  287A               	goto	l1395
  2626     006F                     l1391:
  2627     006F  3001               	movlw	1
  2628     0070                     u945:
  2629     0070  1003               	clrc
  2630     0071  0DF0               	rlf	___awdiv@divisor,f
  2631     0072  0DF1               	rlf	___awdiv@divisor+1,f
  2632     0073  3EFF               	addlw	-1
  2633     0074  1D03               	skipz
  2634     0075  2870               	goto	u945
  2635     0076                     l1393:
  2636     0076  3001               	movlw	1
  2637     0077  00F4               	movwf	??___awdiv
  2638     0078  0874               	movf	??___awdiv,w
  2639     0079  07F5               	addwf	___awdiv@counter,f
  2640     007A                     l1395:
  2641     007A  1FF1               	btfss	___awdiv@divisor+1,7
  2642     007B  287D               	goto	u951
  2643     007C  287E               	goto	u950
  2644     007D                     u951:
  2645     007D  286F               	goto	l1391
  2646     007E                     u950:
  2647     007E                     l1397:
  2648     007E  3001               	movlw	1
  2649     007F                     u965:
  2650     007F  1003               	clrc
  2651     0080  0DF7               	rlf	___awdiv@quotient,f
  2652     0081  0DF8               	rlf	___awdiv@quotient+1,f
  2653     0082  3EFF               	addlw	-1
  2654     0083  1D03               	skipz
  2655     0084  287F               	goto	u965
  2656     0085  0871               	movf	___awdiv@divisor+1,w
  2657     0086  0273               	subwf	___awdiv@dividend+1,w
  2658     0087  1D03               	skipz
  2659     0088  288B               	goto	u975
  2660     0089  0870               	movf	___awdiv@divisor,w
  2661     008A  0272               	subwf	___awdiv@dividend,w
  2662     008B                     u975:
  2663     008B  1C03               	skipc
  2664     008C  288E               	goto	u971
  2665     008D  288F               	goto	u970
  2666     008E                     u971:
  2667     008E  2896               	goto	l1403
  2668     008F                     u970:
  2669     008F                     l1399:
  2670     008F  0870               	movf	___awdiv@divisor,w
  2671     0090  02F2               	subwf	___awdiv@dividend,f
  2672     0091  0871               	movf	___awdiv@divisor+1,w
  2673     0092  1C03               	skipc
  2674     0093  03F3               	decf	___awdiv@dividend+1,f
  2675     0094  02F3               	subwf	___awdiv@dividend+1,f
  2676     0095                     l1401:
  2677     0095  1477               	bsf	___awdiv@quotient,0
  2678     0096                     l1403:
  2679     0096  3001               	movlw	1
  2680     0097                     u985:
  2681     0097  1003               	clrc
  2682     0098  0CF1               	rrf	___awdiv@divisor+1,f
  2683     0099  0CF0               	rrf	___awdiv@divisor,f
  2684     009A  3EFF               	addlw	-1
  2685     009B  1D03               	skipz
  2686     009C  2897               	goto	u985
  2687     009D                     l1405:
  2688     009D  3001               	movlw	1
  2689     009E  02F5               	subwf	___awdiv@counter,f
  2690     009F  1D03               	btfss	3,2
  2691     00A0  28A2               	goto	u991
  2692     00A1  28A3               	goto	u990
  2693     00A2                     u991:
  2694     00A2  287E               	goto	l1397
  2695     00A3                     u990:
  2696     00A3                     l1407:
  2697     00A3  0876               	movf	___awdiv@sign,w
  2698     00A4  1903               	btfsc	3,2
  2699     00A5  28A7               	goto	u1001
  2700     00A6  28A8               	goto	u1000
  2701     00A7                     u1001:
  2702     00A7  28AD               	goto	l1411
  2703     00A8                     u1000:
  2704     00A8                     l1409:
  2705     00A8  09F7               	comf	___awdiv@quotient,f
  2706     00A9  09F8               	comf	___awdiv@quotient+1,f
  2707     00AA  0AF7               	incf	___awdiv@quotient,f
  2708     00AB  1903               	skipnz
  2709     00AC  0AF8               	incf	___awdiv@quotient+1,f
  2710     00AD                     l1411:
  2711     00AD  0878               	movf	___awdiv@quotient+1,w
  2712     00AE  00F1               	movwf	?___awdiv+1
  2713     00AF  0877               	movf	___awdiv@quotient,w
  2714     00B0  00F0               	movwf	?___awdiv
  2715     00B1                     l422:
  2716     00B1  0008               	return
  2717     00B2                     __end_of___awdiv:
  2718                           
  2719                           	psect	text11
  2720     012A                     __ptext11:	
  2721 ;; *************** function ___xxtofl *****************
  2722 ;; Defined at:
  2723 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  sign            1    wreg     unsigned char 
  2726 ;;  val             4    0[COMMON] long 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  sign            1    8[COMMON] unsigned char 
  2729 ;;  arg             4   10[COMMON] unsigned long 
  2730 ;;  exp             1    9[COMMON] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  4    0[COMMON] unsigned char 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         4       0       0       0       0
  2741 ;;      Locals:         6       0       0       0       0
  2742 ;;      Temps:          4       0       0       0       0
  2743 ;;      Totals:        14       0       0       0       0
  2744 ;;Total ram usage:       14 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753     012A                     ___xxtofl:	
  2754                           ;psect for function ___xxtofl
  2755                           
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2759                           ;___xxtofl@sign stored from wreg
  2760     012A  00F8               	movwf	___xxtofl@sign
  2761     012B                     l1717:
  2762     012B  0878               	movf	___xxtofl@sign,w
  2763     012C  1903               	btfsc	3,2
  2764     012D  292F               	goto	u1631
  2765     012E  2930               	goto	u1630
  2766     012F                     u1631:
  2767     012F  2944               	goto	l1723
  2768     0130                     u1630:
  2769     0130                     l1719:
  2770     0130  1FF3               	btfss	___xxtofl@val+3,7
  2771     0131  2933               	goto	u1641
  2772     0132  2934               	goto	u1640
  2773     0133                     u1641:
  2774     0133  2944               	goto	l1723
  2775     0134                     u1640:
  2776     0134                     l1721:
  2777     0134  0970               	comf	___xxtofl@val,w
  2778     0135  00FA               	movwf	___xxtofl@arg
  2779     0136  0971               	comf	___xxtofl@val+1,w
  2780     0137  00FB               	movwf	___xxtofl@arg+1
  2781     0138  0972               	comf	___xxtofl@val+2,w
  2782     0139  00FC               	movwf	___xxtofl@arg+2
  2783     013A  0973               	comf	___xxtofl@val+3,w
  2784     013B  00FD               	movwf	___xxtofl@arg+3
  2785     013C  0AFA               	incf	___xxtofl@arg,f
  2786     013D  1903               	skipnz
  2787     013E  0AFB               	incf	___xxtofl@arg+1,f
  2788     013F  1903               	skipnz
  2789     0140  0AFC               	incf	___xxtofl@arg+2,f
  2790     0141  1903               	skipnz
  2791     0142  0AFD               	incf	___xxtofl@arg+3,f
  2792     0143  294C               	goto	l702
  2793     0144                     l1723:
  2794     0144  0873               	movf	___xxtofl@val+3,w
  2795     0145  00FD               	movwf	___xxtofl@arg+3
  2796     0146  0872               	movf	___xxtofl@val+2,w
  2797     0147  00FC               	movwf	___xxtofl@arg+2
  2798     0148  0871               	movf	___xxtofl@val+1,w
  2799     0149  00FB               	movwf	___xxtofl@arg+1
  2800     014A  0870               	movf	___xxtofl@val,w
  2801     014B  00FA               	movwf	___xxtofl@arg
  2802     014C                     l702:
  2803     014C  0873               	movf	___xxtofl@val+3,w
  2804     014D  0472               	iorwf	___xxtofl@val+2,w
  2805     014E  0471               	iorwf	___xxtofl@val+1,w
  2806     014F  0470               	iorwf	___xxtofl@val,w
  2807     0150  1D03               	skipz
  2808     0151  2953               	goto	u1651
  2809     0152  2954               	goto	u1650
  2810     0153                     u1651:
  2811     0153  295D               	goto	l1729
  2812     0154                     u1650:
  2813     0154                     l1725:
  2814     0154  3000               	movlw	0
  2815     0155  00F3               	movwf	?___xxtofl+3
  2816     0156  3000               	movlw	0
  2817     0157  00F2               	movwf	?___xxtofl+2
  2818     0158  3000               	movlw	0
  2819     0159  00F1               	movwf	?___xxtofl+1
  2820     015A  3000               	movlw	0
  2821     015B  00F0               	movwf	?___xxtofl
  2822     015C  29E1               	goto	l704
  2823     015D                     l1729:
  2824     015D  3096               	movlw	150
  2825     015E  00F9               	movwf	___xxtofl@exp
  2826     015F  296D               	goto	l1733
  2827     0160                     l1731:
  2828     0160  3001               	movlw	1
  2829     0161  00F4               	movwf	??___xxtofl
  2830     0162  0874               	movf	??___xxtofl,w
  2831     0163  07F9               	addwf	___xxtofl@exp,f
  2832     0164  3001               	movlw	1
  2833     0165                     u1665:
  2834     0165  1003               	clrc
  2835     0166  0CFD               	rrf	___xxtofl@arg+3,f
  2836     0167  0CFC               	rrf	___xxtofl@arg+2,f
  2837     0168  0CFB               	rrf	___xxtofl@arg+1,f
  2838     0169  0CFA               	rrf	___xxtofl@arg,f
  2839     016A  3EFF               	addlw	-1
  2840     016B  1D03               	skipz
  2841     016C  2965               	goto	u1665
  2842     016D                     l1733:
  2843     016D  30FE               	movlw	254
  2844     016E  057D               	andwf	___xxtofl@arg+3,w
  2845     016F  1D03               	btfss	3,2
  2846     0170  2972               	goto	u1671
  2847     0171  2973               	goto	u1670
  2848     0172                     u1671:
  2849     0172  2960               	goto	l1731
  2850     0173                     u1670:
  2851     0173  298F               	goto	l708
  2852     0174                     l1735:
  2853     0174  3001               	movlw	1
  2854     0175  00F4               	movwf	??___xxtofl
  2855     0176  0874               	movf	??___xxtofl,w
  2856     0177  07F9               	addwf	___xxtofl@exp,f
  2857     0178                     l1737:
  2858     0178  3001               	movlw	1
  2859     0179  07FA               	addwf	___xxtofl@arg,f
  2860     017A  3000               	movlw	0
  2861     017B  1803               	skipnc
  2862     017C  3001               	movlw	1
  2863     017D  07FB               	addwf	___xxtofl@arg+1,f
  2864     017E  3000               	movlw	0
  2865     017F  1803               	skipnc
  2866     0180  3001               	movlw	1
  2867     0181  07FC               	addwf	___xxtofl@arg+2,f
  2868     0182  3000               	movlw	0
  2869     0183  1803               	skipnc
  2870     0184  3001               	movlw	1
  2871     0185  07FD               	addwf	___xxtofl@arg+3,f
  2872     0186                     l1739:
  2873     0186  3001               	movlw	1
  2874     0187                     u1685:
  2875     0187  1003               	clrc
  2876     0188  0CFD               	rrf	___xxtofl@arg+3,f
  2877     0189  0CFC               	rrf	___xxtofl@arg+2,f
  2878     018A  0CFB               	rrf	___xxtofl@arg+1,f
  2879     018B  0CFA               	rrf	___xxtofl@arg,f
  2880     018C  3EFF               	addlw	-1
  2881     018D  1D03               	skipz
  2882     018E  2987               	goto	u1685
  2883     018F                     l708:
  2884     018F  30FF               	movlw	255
  2885     0190  057D               	andwf	___xxtofl@arg+3,w
  2886     0191  1D03               	btfss	3,2
  2887     0192  2994               	goto	u1691
  2888     0193  2995               	goto	u1690
  2889     0194                     u1691:
  2890     0194  2974               	goto	l1735
  2891     0195                     u1690:
  2892     0195  29A1               	goto	l1743
  2893     0196                     l1741:
  2894     0196  3001               	movlw	1
  2895     0197  02F9               	subwf	___xxtofl@exp,f
  2896     0198  3001               	movlw	1
  2897     0199  00F4               	movwf	??___xxtofl
  2898     019A                     u1705:
  2899     019A  1003               	clrc
  2900     019B  0DFA               	rlf	___xxtofl@arg,f
  2901     019C  0DFB               	rlf	___xxtofl@arg+1,f
  2902     019D  0DFC               	rlf	___xxtofl@arg+2,f
  2903     019E  0DFD               	rlf	___xxtofl@arg+3,f
  2904     019F  0BF4               	decfsz	??___xxtofl,f
  2905     01A0  299A               	goto	u1705
  2906     01A1                     l1743:
  2907     01A1  1BFC               	btfsc	___xxtofl@arg+2,7
  2908     01A2  29A4               	goto	u1711
  2909     01A3  29A5               	goto	u1710
  2910     01A4                     u1711:
  2911     01A4  29AB               	goto	l715
  2912     01A5                     u1710:
  2913     01A5                     l1745:
  2914     01A5  3002               	movlw	2
  2915     01A6  0279               	subwf	___xxtofl@exp,w
  2916     01A7  1803               	skipnc
  2917     01A8  29AA               	goto	u1721
  2918     01A9  29AB               	goto	u1720
  2919     01AA                     u1721:
  2920     01AA  2996               	goto	l1741
  2921     01AB                     u1720:
  2922     01AB                     l715:
  2923     01AB  1879               	btfsc	___xxtofl@exp,0
  2924     01AC  29AE               	goto	u1731
  2925     01AD  29AF               	goto	u1730
  2926     01AE                     u1731:
  2927     01AE  29B7               	goto	l716
  2928     01AF                     u1730:
  2929     01AF                     l1747:
  2930     01AF  30FF               	movlw	255
  2931     01B0  05FA               	andwf	___xxtofl@arg,f
  2932     01B1  30FF               	movlw	255
  2933     01B2  05FB               	andwf	___xxtofl@arg+1,f
  2934     01B3  307F               	movlw	127
  2935     01B4  05FC               	andwf	___xxtofl@arg+2,f
  2936     01B5  30FF               	movlw	255
  2937     01B6  05FD               	andwf	___xxtofl@arg+3,f
  2938     01B7                     l716:
  2939     01B7  1003               	clrc
  2940     01B8  0CF9               	rrf	___xxtofl@exp,f
  2941     01B9                     l1749:
  2942     01B9  0879               	movf	___xxtofl@exp,w
  2943     01BA  00F4               	movwf	??___xxtofl
  2944     01BB  01F5               	clrf	??___xxtofl+1
  2945     01BC  01F6               	clrf	??___xxtofl+2
  2946     01BD  01F7               	clrf	??___xxtofl+3
  2947     01BE  3018               	movlw	24
  2948     01BF                     u1745:
  2949     01BF  1003               	clrc
  2950     01C0  0DF4               	rlf	??___xxtofl,f
  2951     01C1  0DF5               	rlf	??___xxtofl+1,f
  2952     01C2  0DF6               	rlf	??___xxtofl+2,f
  2953     01C3  0DF7               	rlf	??___xxtofl+3,f
  2954     01C4                     u1740:
  2955     01C4  3EFF               	addlw	-1
  2956     01C5  1D03               	skipz
  2957     01C6  29BF               	goto	u1745
  2958     01C7  0874               	movf	??___xxtofl,w
  2959     01C8  04FA               	iorwf	___xxtofl@arg,f
  2960     01C9  0875               	movf	??___xxtofl+1,w
  2961     01CA  04FB               	iorwf	___xxtofl@arg+1,f
  2962     01CB  0876               	movf	??___xxtofl+2,w
  2963     01CC  04FC               	iorwf	___xxtofl@arg+2,f
  2964     01CD  0877               	movf	??___xxtofl+3,w
  2965     01CE  04FD               	iorwf	___xxtofl@arg+3,f
  2966     01CF                     l1751:
  2967     01CF  0878               	movf	___xxtofl@sign,w
  2968     01D0  1903               	btfsc	3,2
  2969     01D1  29D3               	goto	u1751
  2970     01D2  29D4               	goto	u1750
  2971     01D3                     u1751:
  2972     01D3  29D9               	goto	l1757
  2973     01D4                     u1750:
  2974     01D4                     l1753:
  2975     01D4  1FF3               	btfss	___xxtofl@val+3,7
  2976     01D5  29D7               	goto	u1761
  2977     01D6  29D8               	goto	u1760
  2978     01D7                     u1761:
  2979     01D7  29D9               	goto	l1757
  2980     01D8                     u1760:
  2981     01D8                     l1755:
  2982     01D8  17FD               	bsf	___xxtofl@arg+3,7
  2983     01D9                     l1757:
  2984     01D9  087D               	movf	___xxtofl@arg+3,w
  2985     01DA  00F3               	movwf	?___xxtofl+3
  2986     01DB  087C               	movf	___xxtofl@arg+2,w
  2987     01DC  00F2               	movwf	?___xxtofl+2
  2988     01DD  087B               	movf	___xxtofl@arg+1,w
  2989     01DE  00F1               	movwf	?___xxtofl+1
  2990     01DF  087A               	movf	___xxtofl@arg,w
  2991     01E0  00F0               	movwf	?___xxtofl
  2992     01E1                     l704:
  2993     01E1  0008               	return
  2994     01E2                     __end_of___xxtofl:
  2995                           
  2996                           	psect	text12
  2997     00B2                     __ptext12:	
  2998 ;; *************** function ___fltol *****************
  2999 ;; Defined at:
  3000 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  f1              4   26[BANK0 ] unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  exp1            1   35[BANK0 ] unsigned char 
  3005 ;;  sign1           1   34[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  4   26[BANK0 ] long 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       4       0       0       0
  3016 ;;      Locals:         0       2       0       0       0
  3017 ;;      Temps:          0       4       0       0       0
  3018 ;;      Totals:         0      10       0       0       0
  3019 ;;Total ram usage:       10 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028     00B2                     ___fltol:	
  3029                           ;psect for function ___fltol
  3030                           
  3031     00B2                     l1541:	
  3032                           ;incstack = 0
  3033                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3034                           
  3035     00B2  1003               	clrc
  3036     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  3037     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  3038     00B5  0D3C               	rlf	___fltol@f1+2,w
  3039     00B6  0D3D               	rlf	___fltol@f1+3,w
  3040     00B7  00C3               	movwf	___fltol@exp1
  3041     00B8  0843               	movf	___fltol@exp1,w
  3042     00B9  1D03               	btfss	3,2
  3043     00BA  28BC               	goto	u1161
  3044     00BB  28BD               	goto	u1160
  3045     00BC                     u1161:
  3046     00BC  28C6               	goto	l1547
  3047     00BD                     u1160:
  3048     00BD                     l1543:
  3049     00BD  3000               	movlw	0
  3050     00BE  00BD               	movwf	?___fltol+3
  3051     00BF  3000               	movlw	0
  3052     00C0  00BC               	movwf	?___fltol+2
  3053     00C1  3000               	movlw	0
  3054     00C2  00BB               	movwf	?___fltol+1
  3055     00C3  3000               	movlw	0
  3056     00C4  00BA               	movwf	?___fltol
  3057     00C5  2929               	goto	l455
  3058     00C6                     l1547:
  3059     00C6  083A               	movf	___fltol@f1,w
  3060     00C7  00BE               	movwf	??___fltol
  3061     00C8  083B               	movf	___fltol@f1+1,w
  3062     00C9  00BF               	movwf	??___fltol+1
  3063     00CA  083C               	movf	___fltol@f1+2,w
  3064     00CB  00C0               	movwf	??___fltol+2
  3065     00CC  083D               	movf	___fltol@f1+3,w
  3066     00CD  00C1               	movwf	??___fltol+3
  3067     00CE  301F               	movlw	31
  3068     00CF                     u1175:
  3069     00CF  1003               	clrc
  3070     00D0  0CC1               	rrf	??___fltol+3,f
  3071     00D1  0CC0               	rrf	??___fltol+2,f
  3072     00D2  0CBF               	rrf	??___fltol+1,f
  3073     00D3  0CBE               	rrf	??___fltol,f
  3074     00D4                     u1170:
  3075     00D4  3EFF               	addlw	-1
  3076     00D5  1D03               	skipz
  3077     00D6  28CF               	goto	u1175
  3078     00D7  083E               	movf	??___fltol,w
  3079     00D8  00C2               	movwf	___fltol@sign1
  3080     00D9                     l1549:
  3081     00D9  17BC               	bsf	___fltol@f1+2,7
  3082     00DA                     l1551:
  3083     00DA  30FF               	movlw	255
  3084     00DB  05BA               	andwf	___fltol@f1,f
  3085     00DC  30FF               	movlw	255
  3086     00DD  05BB               	andwf	___fltol@f1+1,f
  3087     00DE  30FF               	movlw	255
  3088     00DF  05BC               	andwf	___fltol@f1+2,f
  3089     00E0  3000               	movlw	0
  3090     00E1  05BD               	andwf	___fltol@f1+3,f
  3091     00E2                     l1553:
  3092     00E2  3096               	movlw	150
  3093     00E3  02C3               	subwf	___fltol@exp1,f
  3094     00E4                     l1555:
  3095     00E4  1FC3               	btfss	___fltol@exp1,7
  3096     00E5  28E7               	goto	u1181
  3097     00E6  28E8               	goto	u1180
  3098     00E7                     u1181:
  3099     00E7  2902               	goto	l1565
  3100     00E8                     u1180:
  3101     00E8                     l1557:
  3102     00E8  0843               	movf	___fltol@exp1,w
  3103     00E9  3A80               	xorlw	128
  3104     00EA  3E97               	addlw	151
  3105     00EB  1803               	skipnc
  3106     00EC  28EE               	goto	u1191
  3107     00ED  28EF               	goto	u1190
  3108     00EE                     u1191:
  3109     00EE  28F0               	goto	l1563
  3110     00EF                     u1190:
  3111     00EF  28BD               	goto	l1543
  3112     00F0                     l1563:
  3113     00F0  3001               	movlw	1
  3114     00F1                     u1205:
  3115     00F1  1003               	clrc
  3116     00F2  0CBD               	rrf	___fltol@f1+3,f
  3117     00F3  0CBC               	rrf	___fltol@f1+2,f
  3118     00F4  0CBB               	rrf	___fltol@f1+1,f
  3119     00F5  0CBA               	rrf	___fltol@f1,f
  3120     00F6  3EFF               	addlw	-1
  3121     00F7  1D03               	skipz
  3122     00F8  28F1               	goto	u1205
  3123     00F9  3001               	movlw	1
  3124     00FA  00BE               	movwf	??___fltol
  3125     00FB  083E               	movf	??___fltol,w
  3126     00FC  07C3               	addwf	___fltol@exp1,f
  3127     00FD  1D03               	btfss	3,2
  3128     00FE  2900               	goto	u1211
  3129     00FF  2901               	goto	u1210
  3130     0100                     u1211:
  3131     0100  28F0               	goto	l1563
  3132     0101                     u1210:
  3133     0101  2919               	goto	l1573
  3134     0102                     l1565:
  3135     0102  3020               	movlw	32
  3136     0103  0243               	subwf	___fltol@exp1,w
  3137     0104  1C03               	skipc
  3138     0105  2907               	goto	u1221
  3139     0106  2908               	goto	u1220
  3140     0107                     u1221:
  3141     0107  2914               	goto	l462
  3142     0108                     u1220:
  3143     0108  28BD               	goto	l1543
  3144     0109                     l1571:
  3145     0109  3001               	movlw	1
  3146     010A  00BE               	movwf	??___fltol
  3147     010B                     u1235:
  3148     010B  1003               	clrc
  3149     010C  0DBA               	rlf	___fltol@f1,f
  3150     010D  0DBB               	rlf	___fltol@f1+1,f
  3151     010E  0DBC               	rlf	___fltol@f1+2,f
  3152     010F  0DBD               	rlf	___fltol@f1+3,f
  3153     0110  0BBE               	decfsz	??___fltol,f
  3154     0111  290B               	goto	u1235
  3155     0112  3001               	movlw	1
  3156     0113  02C3               	subwf	___fltol@exp1,f
  3157     0114                     l462:
  3158     0114  0843               	movf	___fltol@exp1,w
  3159     0115  1D03               	btfss	3,2
  3160     0116  2918               	goto	u1241
  3161     0117  2919               	goto	u1240
  3162     0118                     u1241:
  3163     0118  2909               	goto	l1571
  3164     0119                     u1240:
  3165     0119                     l1573:
  3166     0119  0842               	movf	___fltol@sign1,w
  3167     011A  1903               	btfsc	3,2
  3168     011B  291D               	goto	u1251
  3169     011C  291E               	goto	u1250
  3170     011D                     u1251:
  3171     011D  2929               	goto	l465
  3172     011E                     u1250:
  3173     011E                     l1575:
  3174     011E  09BA               	comf	___fltol@f1,f
  3175     011F  09BB               	comf	___fltol@f1+1,f
  3176     0120  09BC               	comf	___fltol@f1+2,f
  3177     0121  09BD               	comf	___fltol@f1+3,f
  3178     0122  0ABA               	incf	___fltol@f1,f
  3179     0123  1903               	skipnz
  3180     0124  0ABB               	incf	___fltol@f1+1,f
  3181     0125  1903               	skipnz
  3182     0126  0ABC               	incf	___fltol@f1+2,f
  3183     0127  1903               	skipnz
  3184     0128  0ABD               	incf	___fltol@f1+3,f
  3185     0129                     l465:
  3186     0129                     l455:
  3187     0129  0008               	return
  3188     012A                     __end_of___fltol:
  3189                           
  3190                           	psect	text13
  3191     04AE                     __ptext13:	
  3192 ;; *************** function ___flmul *****************
  3193 ;; Defined at:
  3194 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  b               4    0[BANK0 ] long 
  3197 ;;  a               4    4[BANK0 ] long 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  prod            4   20[BANK0 ] struct .
  3200 ;;  grs             4   14[BANK0 ] unsigned long 
  3201 ;;  temp            2   24[BANK0 ] struct .
  3202 ;;  bexp            1   19[BANK0 ] unsigned char 
  3203 ;;  aexp            1   18[BANK0 ] unsigned char 
  3204 ;;  sign            1   13[BANK0 ] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  4    0[BANK0 ] unsigned char 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3214 ;;      Params:         0       8       0       0       0
  3215 ;;      Locals:         0      13       0       0       0
  3216 ;;      Temps:          0       5       0       0       0
  3217 ;;      Totals:         0      26       0       0       0
  3218 ;;Total ram usage:       26 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 1
  3221 ;; This function calls:
  3222 ;;		__Umul8_16
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228     04AE                     ___flmul:	
  3229                           ;psect for function ___flmul
  3230                           
  3231     04AE                     l1577:	
  3232                           ;incstack = 0
  3233                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3234                           
  3235     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3236     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3237     04B0  0823               	movf	___flmul@b+3,w
  3238     04B1  3980               	andlw	128
  3239     04B2  00AD               	movwf	___flmul@sign
  3240     04B3                     l1579:
  3241     04B3  0823               	movf	___flmul@b+3,w
  3242     04B4  00A8               	movwf	??___flmul
  3243     04B5  0728               	addwf	??___flmul,w
  3244     04B6  00B3               	movwf	___flmul@bexp
  3245     04B7                     l1581:
  3246     04B7  1FA2               	btfss	___flmul@b+2,7
  3247     04B8  2CBA               	goto	u1261
  3248     04B9  2CBB               	goto	u1260
  3249     04BA                     u1261:
  3250     04BA  2CBC               	goto	l1585
  3251     04BB                     u1260:
  3252     04BB                     l1583:
  3253     04BB  1433               	bsf	___flmul@bexp,0
  3254     04BC                     l1585:
  3255     04BC  0833               	movf	___flmul@bexp,w
  3256     04BD  1903               	btfsc	3,2
  3257     04BE  2CC0               	goto	u1271
  3258     04BF  2CC1               	goto	u1270
  3259     04C0                     u1271:
  3260     04C0  2CD0               	goto	l1593
  3261     04C1                     u1270:
  3262     04C1                     l1587:
  3263     04C1  0A33               	incf	___flmul@bexp,w
  3264     04C2  1D03               	btfss	3,2
  3265     04C3  2CC5               	goto	u1281
  3266     04C4  2CC6               	goto	u1280
  3267     04C5                     u1281:
  3268     04C5  2CCE               	goto	l1591
  3269     04C6                     u1280:
  3270     04C6                     l1589:
  3271     04C6  3000               	movlw	0
  3272     04C7  00A3               	movwf	___flmul@b+3
  3273     04C8  3000               	movlw	0
  3274     04C9  00A2               	movwf	___flmul@b+2
  3275     04CA  3000               	movlw	0
  3276     04CB  00A1               	movwf	___flmul@b+1
  3277     04CC  3000               	movlw	0
  3278     04CD  00A0               	movwf	___flmul@b
  3279     04CE                     l1591:
  3280     04CE  17A2               	bsf	___flmul@b+2,7
  3281     04CF  2CD8               	goto	l1595
  3282     04D0                     l1593:
  3283     04D0  3000               	movlw	0
  3284     04D1  00A3               	movwf	___flmul@b+3
  3285     04D2  3000               	movlw	0
  3286     04D3  00A2               	movwf	___flmul@b+2
  3287     04D4  3000               	movlw	0
  3288     04D5  00A1               	movwf	___flmul@b+1
  3289     04D6  3000               	movlw	0
  3290     04D7  00A0               	movwf	___flmul@b
  3291     04D8                     l1595:
  3292     04D8  0827               	movf	___flmul@a+3,w
  3293     04D9  3980               	andlw	128
  3294     04DA  00A8               	movwf	??___flmul
  3295     04DB  0828               	movf	??___flmul,w
  3296     04DC  06AD               	xorwf	___flmul@sign,f
  3297     04DD                     l1597:
  3298     04DD  0827               	movf	___flmul@a+3,w
  3299     04DE  00A8               	movwf	??___flmul
  3300     04DF  0728               	addwf	??___flmul,w
  3301     04E0  00B2               	movwf	___flmul@aexp
  3302     04E1                     l1599:
  3303     04E1  1FA6               	btfss	___flmul@a+2,7
  3304     04E2  2CE4               	goto	u1291
  3305     04E3  2CE5               	goto	u1290
  3306     04E4                     u1291:
  3307     04E4  2CE6               	goto	l1603
  3308     04E5                     u1290:
  3309     04E5                     l1601:
  3310     04E5  1432               	bsf	___flmul@aexp,0
  3311     04E6                     l1603:
  3312     04E6  0832               	movf	___flmul@aexp,w
  3313     04E7  1903               	btfsc	3,2
  3314     04E8  2CEA               	goto	u1301
  3315     04E9  2CEB               	goto	u1300
  3316     04EA                     u1301:
  3317     04EA  2CFA               	goto	l1611
  3318     04EB                     u1300:
  3319     04EB                     l1605:
  3320     04EB  0A32               	incf	___flmul@aexp,w
  3321     04EC  1D03               	btfss	3,2
  3322     04ED  2CEF               	goto	u1311
  3323     04EE  2CF0               	goto	u1310
  3324     04EF                     u1311:
  3325     04EF  2CF8               	goto	l1609
  3326     04F0                     u1310:
  3327     04F0                     l1607:
  3328     04F0  3000               	movlw	0
  3329     04F1  00A7               	movwf	___flmul@a+3
  3330     04F2  3000               	movlw	0
  3331     04F3  00A6               	movwf	___flmul@a+2
  3332     04F4  3000               	movlw	0
  3333     04F5  00A5               	movwf	___flmul@a+1
  3334     04F6  3000               	movlw	0
  3335     04F7  00A4               	movwf	___flmul@a
  3336     04F8                     l1609:
  3337     04F8  17A6               	bsf	___flmul@a+2,7
  3338     04F9  2D02               	goto	l1613
  3339     04FA                     l1611:
  3340     04FA  3000               	movlw	0
  3341     04FB  00A7               	movwf	___flmul@a+3
  3342     04FC  3000               	movlw	0
  3343     04FD  00A6               	movwf	___flmul@a+2
  3344     04FE  3000               	movlw	0
  3345     04FF  00A5               	movwf	___flmul@a+1
  3346     0500  3000               	movlw	0
  3347     0501  00A4               	movwf	___flmul@a
  3348     0502                     l1613:
  3349     0502  0832               	movf	___flmul@aexp,w
  3350     0503  1903               	btfsc	3,2
  3351     0504  2D06               	goto	u1321
  3352     0505  2D07               	goto	u1320
  3353     0506                     u1321:
  3354     0506  2D0C               	goto	l1617
  3355     0507                     u1320:
  3356     0507                     l1615:
  3357     0507  0833               	movf	___flmul@bexp,w
  3358     0508  1D03               	btfss	3,2
  3359     0509  2D0B               	goto	u1331
  3360     050A  2D0C               	goto	u1330
  3361     050B                     u1331:
  3362     050B  2D15               	goto	l1621
  3363     050C                     u1330:
  3364     050C                     l1617:
  3365     050C  3000               	movlw	0
  3366     050D  00A3               	movwf	?___flmul+3
  3367     050E  3000               	movlw	0
  3368     050F  00A2               	movwf	?___flmul+2
  3369     0510  3000               	movlw	0
  3370     0511  00A1               	movwf	?___flmul+1
  3371     0512  3000               	movlw	0
  3372     0513  00A0               	movwf	?___flmul
  3373     0514  2FF2               	goto	l658
  3374     0515                     l1621:
  3375     0515  0820               	movf	___flmul@b,w
  3376     0516  00F0               	movwf	__Umul8_16@multiplicand
  3377     0517  0826               	movf	___flmul@a+2,w
  3378     0518  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3379     051D  0871               	movf	?__Umul8_16+1,w
  3380     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3381     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3382     0520  00B9               	movwf	___flmul@temp+1
  3383     0521  0870               	movf	?__Umul8_16,w
  3384     0522  00B8               	movwf	___flmul@temp
  3385     0523                     l1623:
  3386     0523  0838               	movf	___flmul@temp,w
  3387     0524  00A8               	movwf	??___flmul
  3388     0525  01A9               	clrf	??___flmul+1
  3389     0526  01AA               	clrf	??___flmul+2
  3390     0527  01AB               	clrf	??___flmul+3
  3391     0528  082B               	movf	??___flmul+3,w
  3392     0529  00B1               	movwf	___flmul@grs+3
  3393     052A  082A               	movf	??___flmul+2,w
  3394     052B  00B0               	movwf	___flmul@grs+2
  3395     052C  0829               	movf	??___flmul+1,w
  3396     052D  00AF               	movwf	___flmul@grs+1
  3397     052E  0828               	movf	??___flmul,w
  3398     052F  00AE               	movwf	___flmul@grs
  3399     0530                     l1625:
  3400     0530  0839               	movf	___flmul@temp+1,w
  3401     0531  00A8               	movwf	??___flmul
  3402     0532  01A9               	clrf	??___flmul+1
  3403     0533  01AA               	clrf	??___flmul+2
  3404     0534  01AB               	clrf	??___flmul+3
  3405     0535  082B               	movf	??___flmul+3,w
  3406     0536  00B7               	movwf	___flmul@prod+3
  3407     0537  082A               	movf	??___flmul+2,w
  3408     0538  00B6               	movwf	___flmul@prod+2
  3409     0539  0829               	movf	??___flmul+1,w
  3410     053A  00B5               	movwf	___flmul@prod+1
  3411     053B  0828               	movf	??___flmul,w
  3412     053C  00B4               	movwf	___flmul@prod
  3413     053D  0821               	movf	___flmul@b+1,w
  3414     053E  00F0               	movwf	__Umul8_16@multiplicand
  3415     053F  0825               	movf	___flmul@a+1,w
  3416     0540  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3417     0545  0871               	movf	?__Umul8_16+1,w
  3418     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3420     0548  00B9               	movwf	___flmul@temp+1
  3421     0549  0870               	movf	?__Umul8_16,w
  3422     054A  00B8               	movwf	___flmul@temp
  3423     054B                     l1627:
  3424     054B  0838               	movf	___flmul@temp,w
  3425     054C  00A8               	movwf	??___flmul
  3426     054D  01A9               	clrf	??___flmul+1
  3427     054E  01AA               	clrf	??___flmul+2
  3428     054F  01AB               	clrf	??___flmul+3
  3429     0550  0828               	movf	??___flmul,w
  3430     0551  07AE               	addwf	___flmul@grs,f
  3431     0552  0829               	movf	??___flmul+1,w
  3432     0553  1103               	clrz
  3433     0554  1803               	skipnc
  3434     0555  3E01               	addlw	1
  3435     0556  1903               	skipnz
  3436     0557  2D59               	goto	u1341
  3437     0558  07AF               	addwf	___flmul@grs+1,f
  3438     0559                     u1341:
  3439     0559  082A               	movf	??___flmul+2,w
  3440     055A  1103               	clrz
  3441     055B  1803               	skipnc
  3442     055C  3E01               	addlw	1
  3443     055D  1903               	skipnz
  3444     055E  2D60               	goto	u1342
  3445     055F  07B0               	addwf	___flmul@grs+2,f
  3446     0560                     u1342:
  3447     0560  082B               	movf	??___flmul+3,w
  3448     0561  1103               	clrz
  3449     0562  1803               	skipnc
  3450     0563  3E01               	addlw	1
  3451     0564  1903               	skipnz
  3452     0565  2D67               	goto	u1343
  3453     0566  07B1               	addwf	___flmul@grs+3,f
  3454     0567                     u1343:
  3455     0567                     l1629:
  3456     0567  0839               	movf	___flmul@temp+1,w
  3457     0568  00A8               	movwf	??___flmul
  3458     0569  01A9               	clrf	??___flmul+1
  3459     056A  01AA               	clrf	??___flmul+2
  3460     056B  01AB               	clrf	??___flmul+3
  3461     056C  0828               	movf	??___flmul,w
  3462     056D  07B4               	addwf	___flmul@prod,f
  3463     056E  0829               	movf	??___flmul+1,w
  3464     056F  1103               	clrz
  3465     0570  1803               	skipnc
  3466     0571  3E01               	addlw	1
  3467     0572  1903               	skipnz
  3468     0573  2D75               	goto	u1351
  3469     0574  07B5               	addwf	___flmul@prod+1,f
  3470     0575                     u1351:
  3471     0575  082A               	movf	??___flmul+2,w
  3472     0576  1103               	clrz
  3473     0577  1803               	skipnc
  3474     0578  3E01               	addlw	1
  3475     0579  1903               	skipnz
  3476     057A  2D7C               	goto	u1352
  3477     057B  07B6               	addwf	___flmul@prod+2,f
  3478     057C                     u1352:
  3479     057C  082B               	movf	??___flmul+3,w
  3480     057D  1103               	clrz
  3481     057E  1803               	skipnc
  3482     057F  3E01               	addlw	1
  3483     0580  1903               	skipnz
  3484     0581  2D83               	goto	u1353
  3485     0582  07B7               	addwf	___flmul@prod+3,f
  3486     0583                     u1353:
  3487     0583  0822               	movf	___flmul@b+2,w
  3488     0584  00F0               	movwf	__Umul8_16@multiplicand
  3489     0585  0824               	movf	___flmul@a,w
  3490     0586  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3491     058B  0871               	movf	?__Umul8_16+1,w
  3492     058C  1283               	bcf	3,5	;RP0=0, select bank0
  3493     058D  1303               	bcf	3,6	;RP1=0, select bank0
  3494     058E  00B9               	movwf	___flmul@temp+1
  3495     058F  0870               	movf	?__Umul8_16,w
  3496     0590  00B8               	movwf	___flmul@temp
  3497     0591                     l1631:
  3498     0591  0838               	movf	___flmul@temp,w
  3499     0592  00A8               	movwf	??___flmul
  3500     0593  01A9               	clrf	??___flmul+1
  3501     0594  01AA               	clrf	??___flmul+2
  3502     0595  01AB               	clrf	??___flmul+3
  3503     0596  0828               	movf	??___flmul,w
  3504     0597  07AE               	addwf	___flmul@grs,f
  3505     0598  0829               	movf	??___flmul+1,w
  3506     0599  1103               	clrz
  3507     059A  1803               	skipnc
  3508     059B  3E01               	addlw	1
  3509     059C  1903               	skipnz
  3510     059D  2D9F               	goto	u1361
  3511     059E  07AF               	addwf	___flmul@grs+1,f
  3512     059F                     u1361:
  3513     059F  082A               	movf	??___flmul+2,w
  3514     05A0  1103               	clrz
  3515     05A1  1803               	skipnc
  3516     05A2  3E01               	addlw	1
  3517     05A3  1903               	skipnz
  3518     05A4  2DA6               	goto	u1362
  3519     05A5  07B0               	addwf	___flmul@grs+2,f
  3520     05A6                     u1362:
  3521     05A6  082B               	movf	??___flmul+3,w
  3522     05A7  1103               	clrz
  3523     05A8  1803               	skipnc
  3524     05A9  3E01               	addlw	1
  3525     05AA  1903               	skipnz
  3526     05AB  2DAD               	goto	u1363
  3527     05AC  07B1               	addwf	___flmul@grs+3,f
  3528     05AD                     u1363:
  3529     05AD                     l1633:
  3530     05AD  0839               	movf	___flmul@temp+1,w
  3531     05AE  00A8               	movwf	??___flmul
  3532     05AF  01A9               	clrf	??___flmul+1
  3533     05B0  01AA               	clrf	??___flmul+2
  3534     05B1  01AB               	clrf	??___flmul+3
  3535     05B2  0828               	movf	??___flmul,w
  3536     05B3  07B4               	addwf	___flmul@prod,f
  3537     05B4  0829               	movf	??___flmul+1,w
  3538     05B5  1103               	clrz
  3539     05B6  1803               	skipnc
  3540     05B7  3E01               	addlw	1
  3541     05B8  1903               	skipnz
  3542     05B9  2DBB               	goto	u1371
  3543     05BA  07B5               	addwf	___flmul@prod+1,f
  3544     05BB                     u1371:
  3545     05BB  082A               	movf	??___flmul+2,w
  3546     05BC  1103               	clrz
  3547     05BD  1803               	skipnc
  3548     05BE  3E01               	addlw	1
  3549     05BF  1903               	skipnz
  3550     05C0  2DC2               	goto	u1372
  3551     05C1  07B6               	addwf	___flmul@prod+2,f
  3552     05C2                     u1372:
  3553     05C2  082B               	movf	??___flmul+3,w
  3554     05C3  1103               	clrz
  3555     05C4  1803               	skipnc
  3556     05C5  3E01               	addlw	1
  3557     05C6  1903               	skipnz
  3558     05C7  2DC9               	goto	u1373
  3559     05C8  07B7               	addwf	___flmul@prod+3,f
  3560     05C9                     u1373:
  3561     05C9                     l1635:
  3562     05C9  3008               	movlw	8
  3563     05CA  00A8               	movwf	??___flmul
  3564     05CB                     u1385:
  3565     05CB  1003               	clrc
  3566     05CC  0DAE               	rlf	___flmul@grs,f
  3567     05CD  0DAF               	rlf	___flmul@grs+1,f
  3568     05CE  0DB0               	rlf	___flmul@grs+2,f
  3569     05CF  0DB1               	rlf	___flmul@grs+3,f
  3570     05D0  0BA8               	decfsz	??___flmul,f
  3571     05D1  2DCB               	goto	u1385
  3572     05D2                     l1637:
  3573     05D2  0821               	movf	___flmul@b+1,w
  3574     05D3  00F0               	movwf	__Umul8_16@multiplicand
  3575     05D4  0824               	movf	___flmul@a,w
  3576     05D5  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3577     05DA  0871               	movf	?__Umul8_16+1,w
  3578     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3579     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3580     05DD  00B9               	movwf	___flmul@temp+1
  3581     05DE  0870               	movf	?__Umul8_16,w
  3582     05DF  00B8               	movwf	___flmul@temp
  3583     05E0                     l1639:
  3584     05E0  0838               	movf	___flmul@temp,w
  3585     05E1  00A8               	movwf	??___flmul
  3586     05E2  0839               	movf	___flmul@temp+1,w
  3587     05E3  00A9               	movwf	??___flmul+1
  3588     05E4  01AA               	clrf	??___flmul+2
  3589     05E5  01AB               	clrf	??___flmul+3
  3590     05E6  0828               	movf	??___flmul,w
  3591     05E7  07AE               	addwf	___flmul@grs,f
  3592     05E8  0829               	movf	??___flmul+1,w
  3593     05E9  1103               	clrz
  3594     05EA  1803               	skipnc
  3595     05EB  3E01               	addlw	1
  3596     05EC  1903               	skipnz
  3597     05ED  2DEF               	goto	u1391
  3598     05EE  07AF               	addwf	___flmul@grs+1,f
  3599     05EF                     u1391:
  3600     05EF  082A               	movf	??___flmul+2,w
  3601     05F0  1103               	clrz
  3602     05F1  1803               	skipnc
  3603     05F2  3E01               	addlw	1
  3604     05F3  1903               	skipnz
  3605     05F4  2DF6               	goto	u1392
  3606     05F5  07B0               	addwf	___flmul@grs+2,f
  3607     05F6                     u1392:
  3608     05F6  082B               	movf	??___flmul+3,w
  3609     05F7  1103               	clrz
  3610     05F8  1803               	skipnc
  3611     05F9  3E01               	addlw	1
  3612     05FA  1903               	skipnz
  3613     05FB  2DFD               	goto	u1393
  3614     05FC  07B1               	addwf	___flmul@grs+3,f
  3615     05FD                     u1393:
  3616     05FD                     l1641:
  3617     05FD  0820               	movf	___flmul@b,w
  3618     05FE  00F0               	movwf	__Umul8_16@multiplicand
  3619     05FF  0825               	movf	___flmul@a+1,w
  3620     0600  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3621     0605  0871               	movf	?__Umul8_16+1,w
  3622     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0608  00B9               	movwf	___flmul@temp+1
  3625     0609  0870               	movf	?__Umul8_16,w
  3626     060A  00B8               	movwf	___flmul@temp
  3627     060B                     l1643:
  3628     060B  0838               	movf	___flmul@temp,w
  3629     060C  00A8               	movwf	??___flmul
  3630     060D  0839               	movf	___flmul@temp+1,w
  3631     060E  00A9               	movwf	??___flmul+1
  3632     060F  01AA               	clrf	??___flmul+2
  3633     0610  01AB               	clrf	??___flmul+3
  3634     0611  0828               	movf	??___flmul,w
  3635     0612  07AE               	addwf	___flmul@grs,f
  3636     0613  0829               	movf	??___flmul+1,w
  3637     0614  1103               	clrz
  3638     0615  1803               	skipnc
  3639     0616  3E01               	addlw	1
  3640     0617  1903               	skipnz
  3641     0618  2E1A               	goto	u1401
  3642     0619  07AF               	addwf	___flmul@grs+1,f
  3643     061A                     u1401:
  3644     061A  082A               	movf	??___flmul+2,w
  3645     061B  1103               	clrz
  3646     061C  1803               	skipnc
  3647     061D  3E01               	addlw	1
  3648     061E  1903               	skipnz
  3649     061F  2E21               	goto	u1402
  3650     0620  07B0               	addwf	___flmul@grs+2,f
  3651     0621                     u1402:
  3652     0621  082B               	movf	??___flmul+3,w
  3653     0622  1103               	clrz
  3654     0623  1803               	skipnc
  3655     0624  3E01               	addlw	1
  3656     0625  1903               	skipnz
  3657     0626  2E28               	goto	u1403
  3658     0627  07B1               	addwf	___flmul@grs+3,f
  3659     0628                     u1403:
  3660     0628                     l1645:
  3661     0628  3008               	movlw	8
  3662     0629  00A8               	movwf	??___flmul
  3663     062A                     u1415:
  3664     062A  1003               	clrc
  3665     062B  0DAE               	rlf	___flmul@grs,f
  3666     062C  0DAF               	rlf	___flmul@grs+1,f
  3667     062D  0DB0               	rlf	___flmul@grs+2,f
  3668     062E  0DB1               	rlf	___flmul@grs+3,f
  3669     062F  0BA8               	decfsz	??___flmul,f
  3670     0630  2E2A               	goto	u1415
  3671     0631  0820               	movf	___flmul@b,w
  3672     0632  00F0               	movwf	__Umul8_16@multiplicand
  3673     0633  0824               	movf	___flmul@a,w
  3674     0634  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3675     0639  0871               	movf	?__Umul8_16+1,w
  3676     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3677     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3678     063C  00B9               	movwf	___flmul@temp+1
  3679     063D  0870               	movf	?__Umul8_16,w
  3680     063E  00B8               	movwf	___flmul@temp
  3681     063F                     l1647:
  3682     063F  0838               	movf	___flmul@temp,w
  3683     0640  00A8               	movwf	??___flmul
  3684     0641  0839               	movf	___flmul@temp+1,w
  3685     0642  00A9               	movwf	??___flmul+1
  3686     0643  01AA               	clrf	??___flmul+2
  3687     0644  01AB               	clrf	??___flmul+3
  3688     0645  0828               	movf	??___flmul,w
  3689     0646  07AE               	addwf	___flmul@grs,f
  3690     0647  0829               	movf	??___flmul+1,w
  3691     0648  1103               	clrz
  3692     0649  1803               	skipnc
  3693     064A  3E01               	addlw	1
  3694     064B  1903               	skipnz
  3695     064C  2E4E               	goto	u1421
  3696     064D  07AF               	addwf	___flmul@grs+1,f
  3697     064E                     u1421:
  3698     064E  082A               	movf	??___flmul+2,w
  3699     064F  1103               	clrz
  3700     0650  1803               	skipnc
  3701     0651  3E01               	addlw	1
  3702     0652  1903               	skipnz
  3703     0653  2E55               	goto	u1422
  3704     0654  07B0               	addwf	___flmul@grs+2,f
  3705     0655                     u1422:
  3706     0655  082B               	movf	??___flmul+3,w
  3707     0656  1103               	clrz
  3708     0657  1803               	skipnc
  3709     0658  3E01               	addlw	1
  3710     0659  1903               	skipnz
  3711     065A  2E5C               	goto	u1423
  3712     065B  07B1               	addwf	___flmul@grs+3,f
  3713     065C                     u1423:
  3714     065C                     l1649:
  3715     065C  0821               	movf	___flmul@b+1,w
  3716     065D  00F0               	movwf	__Umul8_16@multiplicand
  3717     065E  0826               	movf	___flmul@a+2,w
  3718     065F  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3719     0664  0871               	movf	?__Umul8_16+1,w
  3720     0665  1283               	bcf	3,5	;RP0=0, select bank0
  3721     0666  1303               	bcf	3,6	;RP1=0, select bank0
  3722     0667  00B9               	movwf	___flmul@temp+1
  3723     0668  0870               	movf	?__Umul8_16,w
  3724     0669  00B8               	movwf	___flmul@temp
  3725     066A  0838               	movf	___flmul@temp,w
  3726     066B  00A8               	movwf	??___flmul
  3727     066C  0839               	movf	___flmul@temp+1,w
  3728     066D  00A9               	movwf	??___flmul+1
  3729     066E  01AA               	clrf	??___flmul+2
  3730     066F  01AB               	clrf	??___flmul+3
  3731     0670  0828               	movf	??___flmul,w
  3732     0671  07B4               	addwf	___flmul@prod,f
  3733     0672  0829               	movf	??___flmul+1,w
  3734     0673  1103               	clrz
  3735     0674  1803               	skipnc
  3736     0675  3E01               	addlw	1
  3737     0676  1903               	skipnz
  3738     0677  2E79               	goto	u1431
  3739     0678  07B5               	addwf	___flmul@prod+1,f
  3740     0679                     u1431:
  3741     0679  082A               	movf	??___flmul+2,w
  3742     067A  1103               	clrz
  3743     067B  1803               	skipnc
  3744     067C  3E01               	addlw	1
  3745     067D  1903               	skipnz
  3746     067E  2E80               	goto	u1432
  3747     067F  07B6               	addwf	___flmul@prod+2,f
  3748     0680                     u1432:
  3749     0680  082B               	movf	??___flmul+3,w
  3750     0681  1103               	clrz
  3751     0682  1803               	skipnc
  3752     0683  3E01               	addlw	1
  3753     0684  1903               	skipnz
  3754     0685  2E87               	goto	u1433
  3755     0686  07B7               	addwf	___flmul@prod+3,f
  3756     0687                     u1433:
  3757     0687                     l1651:
  3758     0687  0822               	movf	___flmul@b+2,w
  3759     0688  00F0               	movwf	__Umul8_16@multiplicand
  3760     0689  0825               	movf	___flmul@a+1,w
  3761     068A  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3762     068F  0871               	movf	?__Umul8_16+1,w
  3763     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3764     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3765     0692  00B9               	movwf	___flmul@temp+1
  3766     0693  0870               	movf	?__Umul8_16,w
  3767     0694  00B8               	movwf	___flmul@temp
  3768     0695                     l1653:
  3769     0695  0838               	movf	___flmul@temp,w
  3770     0696  00A8               	movwf	??___flmul
  3771     0697  0839               	movf	___flmul@temp+1,w
  3772     0698  00A9               	movwf	??___flmul+1
  3773     0699  01AA               	clrf	??___flmul+2
  3774     069A  01AB               	clrf	??___flmul+3
  3775     069B  0828               	movf	??___flmul,w
  3776     069C  07B4               	addwf	___flmul@prod,f
  3777     069D  0829               	movf	??___flmul+1,w
  3778     069E  1103               	clrz
  3779     069F  1803               	skipnc
  3780     06A0  3E01               	addlw	1
  3781     06A1  1903               	skipnz
  3782     06A2  2EA4               	goto	u1441
  3783     06A3  07B5               	addwf	___flmul@prod+1,f
  3784     06A4                     u1441:
  3785     06A4  082A               	movf	??___flmul+2,w
  3786     06A5  1103               	clrz
  3787     06A6  1803               	skipnc
  3788     06A7  3E01               	addlw	1
  3789     06A8  1903               	skipnz
  3790     06A9  2EAB               	goto	u1442
  3791     06AA  07B6               	addwf	___flmul@prod+2,f
  3792     06AB                     u1442:
  3793     06AB  082B               	movf	??___flmul+3,w
  3794     06AC  1103               	clrz
  3795     06AD  1803               	skipnc
  3796     06AE  3E01               	addlw	1
  3797     06AF  1903               	skipnz
  3798     06B0  2EB2               	goto	u1443
  3799     06B1  07B7               	addwf	___flmul@prod+3,f
  3800     06B2                     u1443:
  3801     06B2  0822               	movf	___flmul@b+2,w
  3802     06B3  00F0               	movwf	__Umul8_16@multiplicand
  3803     06B4  0826               	movf	___flmul@a+2,w
  3804     06B5  120A  118A  2024  120A  118A  	fcall	__Umul8_16
  3805     06BA  0871               	movf	?__Umul8_16+1,w
  3806     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3807     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3808     06BD  00B9               	movwf	___flmul@temp+1
  3809     06BE  0870               	movf	?__Umul8_16,w
  3810     06BF  00B8               	movwf	___flmul@temp
  3811     06C0                     l1655:
  3812     06C0  0838               	movf	___flmul@temp,w
  3813     06C1  00A8               	movwf	??___flmul
  3814     06C2  0839               	movf	___flmul@temp+1,w
  3815     06C3  00A9               	movwf	??___flmul+1
  3816     06C4  01AA               	clrf	??___flmul+2
  3817     06C5  01AB               	clrf	??___flmul+3
  3818     06C6  3008               	movlw	8
  3819     06C7                     u1455:
  3820     06C7  1003               	clrc
  3821     06C8  0DA8               	rlf	??___flmul,f
  3822     06C9  0DA9               	rlf	??___flmul+1,f
  3823     06CA  0DAA               	rlf	??___flmul+2,f
  3824     06CB  0DAB               	rlf	??___flmul+3,f
  3825     06CC                     u1450:
  3826     06CC  3EFF               	addlw	-1
  3827     06CD  1D03               	skipz
  3828     06CE  2EC7               	goto	u1455
  3829     06CF  0828               	movf	??___flmul,w
  3830     06D0  07B4               	addwf	___flmul@prod,f
  3831     06D1  0829               	movf	??___flmul+1,w
  3832     06D2  1103               	clrz
  3833     06D3  1803               	skipnc
  3834     06D4  3E01               	addlw	1
  3835     06D5  1903               	skipnz
  3836     06D6  2ED8               	goto	u1461
  3837     06D7  07B5               	addwf	___flmul@prod+1,f
  3838     06D8                     u1461:
  3839     06D8  082A               	movf	??___flmul+2,w
  3840     06D9  1103               	clrz
  3841     06DA  1803               	skipnc
  3842     06DB  3E01               	addlw	1
  3843     06DC  1903               	skipnz
  3844     06DD  2EDF               	goto	u1462
  3845     06DE  07B6               	addwf	___flmul@prod+2,f
  3846     06DF                     u1462:
  3847     06DF  082B               	movf	??___flmul+3,w
  3848     06E0  1103               	clrz
  3849     06E1  1803               	skipnc
  3850     06E2  3E01               	addlw	1
  3851     06E3  1903               	skipnz
  3852     06E4  2EE6               	goto	u1463
  3853     06E5  07B7               	addwf	___flmul@prod+3,f
  3854     06E6                     u1463:
  3855     06E6                     l1657:
  3856     06E6  082E               	movf	___flmul@grs,w
  3857     06E7  00A8               	movwf	??___flmul
  3858     06E8  082F               	movf	___flmul@grs+1,w
  3859     06E9  00A9               	movwf	??___flmul+1
  3860     06EA  0830               	movf	___flmul@grs+2,w
  3861     06EB  00AA               	movwf	??___flmul+2
  3862     06EC  0831               	movf	___flmul@grs+3,w
  3863     06ED  00AB               	movwf	??___flmul+3
  3864     06EE  3018               	movlw	24
  3865     06EF                     u1475:
  3866     06EF  1003               	clrc
  3867     06F0  0CAB               	rrf	??___flmul+3,f
  3868     06F1  0CAA               	rrf	??___flmul+2,f
  3869     06F2  0CA9               	rrf	??___flmul+1,f
  3870     06F3  0CA8               	rrf	??___flmul,f
  3871     06F4                     u1470:
  3872     06F4  3EFF               	addlw	-1
  3873     06F5  1D03               	skipz
  3874     06F6  2EEF               	goto	u1475
  3875     06F7  0828               	movf	??___flmul,w
  3876     06F8  07B4               	addwf	___flmul@prod,f
  3877     06F9  0829               	movf	??___flmul+1,w
  3878     06FA  1103               	clrz
  3879     06FB  1803               	skipnc
  3880     06FC  3E01               	addlw	1
  3881     06FD  1903               	skipnz
  3882     06FE  2F00               	goto	u1481
  3883     06FF  07B5               	addwf	___flmul@prod+1,f
  3884     0700                     u1481:
  3885     0700  082A               	movf	??___flmul+2,w
  3886     0701  1103               	clrz
  3887     0702  1803               	skipnc
  3888     0703  3E01               	addlw	1
  3889     0704  1903               	skipnz
  3890     0705  2F07               	goto	u1482
  3891     0706  07B6               	addwf	___flmul@prod+2,f
  3892     0707                     u1482:
  3893     0707  082B               	movf	??___flmul+3,w
  3894     0708  1103               	clrz
  3895     0709  1803               	skipnc
  3896     070A  3E01               	addlw	1
  3897     070B  1903               	skipnz
  3898     070C  2F0E               	goto	u1483
  3899     070D  07B7               	addwf	___flmul@prod+3,f
  3900     070E                     u1483:
  3901     070E                     l1659:
  3902     070E  3008               	movlw	8
  3903     070F  00A8               	movwf	??___flmul
  3904     0710                     u1495:
  3905     0710  1003               	clrc
  3906     0711  0DAE               	rlf	___flmul@grs,f
  3907     0712  0DAF               	rlf	___flmul@grs+1,f
  3908     0713  0DB0               	rlf	___flmul@grs+2,f
  3909     0714  0DB1               	rlf	___flmul@grs+3,f
  3910     0715  0BA8               	decfsz	??___flmul,f
  3911     0716  2F10               	goto	u1495
  3912     0717                     l1661:
  3913     0717  0833               	movf	___flmul@bexp,w
  3914     0718  0732               	addwf	___flmul@aexp,w
  3915     0719  00A8               	movwf	??___flmul
  3916     071A  01A9               	clrf	??___flmul+1
  3917     071B  0DA9               	rlf	??___flmul+1,f
  3918     071C  0828               	movf	??___flmul,w
  3919     071D  3E82               	addlw	130
  3920     071E  00B8               	movwf	___flmul@temp
  3921     071F  0829               	movf	??___flmul+1,w
  3922     0720  1803               	skipnc
  3923     0721  3E01               	addlw	1
  3924     0722  3EFF               	addlw	255
  3925     0723  00B9               	movwf	___flmul@temp+1
  3926     0724  2F42               	goto	l1673
  3927     0725                     l1663:
  3928     0725  3001               	movlw	1
  3929     0726  00A8               	movwf	??___flmul
  3930     0727                     u1505:
  3931     0727  1003               	clrc
  3932     0728  0DB4               	rlf	___flmul@prod,f
  3933     0729  0DB5               	rlf	___flmul@prod+1,f
  3934     072A  0DB6               	rlf	___flmul@prod+2,f
  3935     072B  0DB7               	rlf	___flmul@prod+3,f
  3936     072C  0BA8               	decfsz	??___flmul,f
  3937     072D  2F27               	goto	u1505
  3938     072E                     l1665:
  3939     072E  1FB1               	btfss	___flmul@grs+3,7
  3940     072F  2F31               	goto	u1511
  3941     0730  2F32               	goto	u1510
  3942     0731                     u1511:
  3943     0731  2F33               	goto	l1669
  3944     0732                     u1510:
  3945     0732                     l1667:
  3946     0732  1434               	bsf	___flmul@prod,0
  3947     0733                     l1669:
  3948     0733  3001               	movlw	1
  3949     0734  00A8               	movwf	??___flmul
  3950     0735                     u1525:
  3951     0735  1003               	clrc
  3952     0736  0DAE               	rlf	___flmul@grs,f
  3953     0737  0DAF               	rlf	___flmul@grs+1,f
  3954     0738  0DB0               	rlf	___flmul@grs+2,f
  3955     0739  0DB1               	rlf	___flmul@grs+3,f
  3956     073A  0BA8               	decfsz	??___flmul,f
  3957     073B  2F35               	goto	u1525
  3958     073C                     l1671:
  3959     073C  30FF               	movlw	255
  3960     073D  07B8               	addwf	___flmul@temp,f
  3961     073E  1803               	skipnc
  3962     073F  0AB9               	incf	___flmul@temp+1,f
  3963     0740  30FF               	movlw	255
  3964     0741  07B9               	addwf	___flmul@temp+1,f
  3965     0742                     l1673:
  3966     0742  1FB6               	btfss	___flmul@prod+2,7
  3967     0743  2F45               	goto	u1531
  3968     0744  2F46               	goto	u1530
  3969     0745                     u1531:
  3970     0745  2F25               	goto	l1663
  3971     0746                     u1530:
  3972     0746                     l1675:
  3973     0746  01B2               	clrf	___flmul@aexp
  3974     0747                     l1677:
  3975     0747  1FB1               	btfss	___flmul@grs+3,7
  3976     0748  2F4A               	goto	u1541
  3977     0749  2F4B               	goto	u1540
  3978     074A                     u1541:
  3979     074A  2F67               	goto	l1685
  3980     074B                     u1540:
  3981     074B                     l1679:
  3982     074B  30FF               	movlw	255
  3983     074C  052E               	andwf	___flmul@grs,w
  3984     074D  00A8               	movwf	??___flmul
  3985     074E  30FF               	movlw	255
  3986     074F  052F               	andwf	___flmul@grs+1,w
  3987     0750  00A9               	movwf	??___flmul+1
  3988     0751  30FF               	movlw	255
  3989     0752  0530               	andwf	___flmul@grs+2,w
  3990     0753  00AA               	movwf	??___flmul+2
  3991     0754  307F               	movlw	127
  3992     0755  0531               	andwf	___flmul@grs+3,w
  3993     0756  00AB               	movwf	??___flmul+3
  3994     0757  082B               	movf	??___flmul+3,w
  3995     0758  042A               	iorwf	??___flmul+2,w
  3996     0759  0429               	iorwf	??___flmul+1,w
  3997     075A  0428               	iorwf	??___flmul,w
  3998     075B  1903               	skipnz
  3999     075C  2F5E               	goto	u1551
  4000     075D  2F5F               	goto	u1550
  4001     075E                     u1551:
  4002     075E  2F62               	goto	l664
  4003     075F                     u1550:
  4004     075F                     l1681:
  4005     075F  01B2               	clrf	___flmul@aexp
  4006     0760  0AB2               	incf	___flmul@aexp,f
  4007     0761  2F67               	goto	l1685
  4008     0762                     l664:
  4009     0762  1C34               	btfss	___flmul@prod,0
  4010     0763  2F65               	goto	u1561
  4011     0764  2F66               	goto	u1560
  4012     0765                     u1561:
  4013     0765  2F67               	goto	l1685
  4014     0766                     u1560:
  4015     0766  2F5F               	goto	l1681
  4016     0767                     l1685:
  4017     0767  0832               	movf	___flmul@aexp,w
  4018     0768  1903               	btfsc	3,2
  4019     0769  2F6B               	goto	u1571
  4020     076A  2F6C               	goto	u1570
  4021     076B                     u1571:
  4022     076B  2F9D               	goto	l1695
  4023     076C                     u1570:
  4024     076C                     l1687:
  4025     076C  3001               	movlw	1
  4026     076D  07B4               	addwf	___flmul@prod,f
  4027     076E  3000               	movlw	0
  4028     076F  1803               	skipnc
  4029     0770  3001               	movlw	1
  4030     0771  07B5               	addwf	___flmul@prod+1,f
  4031     0772  3000               	movlw	0
  4032     0773  1803               	skipnc
  4033     0774  3001               	movlw	1
  4034     0775  07B6               	addwf	___flmul@prod+2,f
  4035     0776  3000               	movlw	0
  4036     0777  1803               	skipnc
  4037     0778  3001               	movlw	1
  4038     0779  07B7               	addwf	___flmul@prod+3,f
  4039     077A                     l1689:
  4040     077A  1C37               	btfss	___flmul@prod+3,0
  4041     077B  2F7D               	goto	u1581
  4042     077C  2F7E               	goto	u1580
  4043     077D                     u1581:
  4044     077D  2F9D               	goto	l1695
  4045     077E                     u1580:
  4046     077E                     l1691:
  4047     077E  0834               	movf	___flmul@prod,w
  4048     077F  00A8               	movwf	??___flmul
  4049     0780  0835               	movf	___flmul@prod+1,w
  4050     0781  00A9               	movwf	??___flmul+1
  4051     0782  0836               	movf	___flmul@prod+2,w
  4052     0783  00AA               	movwf	??___flmul+2
  4053     0784  0837               	movf	___flmul@prod+3,w
  4054     0785  00AB               	movwf	??___flmul+3
  4055     0786  3001               	movlw	1
  4056     0787  00AC               	movwf	??___flmul+4
  4057     0788                     u1595:
  4058     0788  0D2B               	rlf	??___flmul+3,w
  4059     0789  0CAB               	rrf	??___flmul+3,f
  4060     078A  0CAA               	rrf	??___flmul+2,f
  4061     078B  0CA9               	rrf	??___flmul+1,f
  4062     078C  0CA8               	rrf	??___flmul,f
  4063     078D                     u1590:
  4064     078D  0BAC               	decfsz	??___flmul+4,f
  4065     078E  2F88               	goto	u1595
  4066     078F  082B               	movf	??___flmul+3,w
  4067     0790  00B7               	movwf	___flmul@prod+3
  4068     0791  082A               	movf	??___flmul+2,w
  4069     0792  00B6               	movwf	___flmul@prod+2
  4070     0793  0829               	movf	??___flmul+1,w
  4071     0794  00B5               	movwf	___flmul@prod+1
  4072     0795  0828               	movf	??___flmul,w
  4073     0796  00B4               	movwf	___flmul@prod
  4074     0797                     l1693:
  4075     0797  3001               	movlw	1
  4076     0798  07B8               	addwf	___flmul@temp,f
  4077     0799  1803               	skipnc
  4078     079A  0AB9               	incf	___flmul@temp+1,f
  4079     079B  3000               	movlw	0
  4080     079C  07B9               	addwf	___flmul@temp+1,f
  4081     079D                     l1695:
  4082     079D  0839               	movf	___flmul@temp+1,w
  4083     079E  3A80               	xorlw	128
  4084     079F  00FF               	movwf	btemp+1
  4085     07A0  3080               	movlw	128
  4086     07A1  027F               	subwf	btemp+1,w
  4087     07A2  1D03               	skipz
  4088     07A3  2FA6               	goto	u1605
  4089     07A4  30FF               	movlw	255
  4090     07A5  0238               	subwf	___flmul@temp,w
  4091     07A6                     u1605:
  4092     07A6  1C03               	skipc
  4093     07A7  2FA9               	goto	u1601
  4094     07A8  2FAA               	goto	u1600
  4095     07A9                     u1601:
  4096     07A9  2FB5               	goto	l1699
  4097     07AA                     u1600:
  4098     07AA                     l1697:
  4099     07AA  307F               	movlw	127
  4100     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4101     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4102     07AD  00B7               	movwf	___flmul@prod+3
  4103     07AE  3080               	movlw	128
  4104     07AF  00B6               	movwf	___flmul@prod+2
  4105     07B0  3000               	movlw	0
  4106     07B1  00B5               	movwf	___flmul@prod+1
  4107     07B2  3000               	movlw	0
  4108     07B3  00B4               	movwf	___flmul@prod
  4109     07B4  2FE6               	goto	l670
  4110     07B5                     l1699:
  4111     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4112     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4113     07B7  0839               	movf	___flmul@temp+1,w
  4114     07B8  3A80               	xorlw	128
  4115     07B9  00FF               	movwf	btemp+1
  4116     07BA  3080               	movlw	128
  4117     07BB  027F               	subwf	btemp+1,w
  4118     07BC  1D03               	skipz
  4119     07BD  2FC0               	goto	u1615
  4120     07BE  3001               	movlw	1
  4121     07BF  0238               	subwf	___flmul@temp,w
  4122     07C0                     u1615:
  4123     07C0  1803               	skipnc
  4124     07C1  2FC3               	goto	u1611
  4125     07C2  2FC4               	goto	u1610
  4126     07C3                     u1611:
  4127     07C3  2FD0               	goto	l1705
  4128     07C4                     u1610:
  4129     07C4                     l1701:
  4130     07C4  3000               	movlw	0
  4131     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4132     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4133     07C7  00B7               	movwf	___flmul@prod+3
  4134     07C8  3000               	movlw	0
  4135     07C9  00B6               	movwf	___flmul@prod+2
  4136     07CA  3000               	movlw	0
  4137     07CB  00B5               	movwf	___flmul@prod+1
  4138     07CC  3000               	movlw	0
  4139     07CD  00B4               	movwf	___flmul@prod
  4140     07CE                     l1703:
  4141     07CE  01AD               	clrf	___flmul@sign
  4142     07CF  2FE6               	goto	l670
  4143     07D0                     l1705:
  4144     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  4145     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  4146     07D2  0838               	movf	___flmul@temp,w
  4147     07D3  00B3               	movwf	___flmul@bexp
  4148     07D4  30FF               	movlw	255
  4149     07D5  05B4               	andwf	___flmul@prod,f
  4150     07D6  30FF               	movlw	255
  4151     07D7  05B5               	andwf	___flmul@prod+1,f
  4152     07D8  307F               	movlw	127
  4153     07D9  05B6               	andwf	___flmul@prod+2,f
  4154     07DA  3000               	movlw	0
  4155     07DB  05B7               	andwf	___flmul@prod+3,f
  4156     07DC                     l1707:
  4157     07DC  1C33               	btfss	___flmul@bexp,0
  4158     07DD  2FDF               	goto	u1621
  4159     07DE  2FE0               	goto	u1620
  4160     07DF                     u1621:
  4161     07DF  2FE1               	goto	l1711
  4162     07E0                     u1620:
  4163     07E0                     l1709:
  4164     07E0  17B6               	bsf	___flmul@prod+2,7
  4165     07E1                     l1711:
  4166     07E1  0833               	movf	___flmul@bexp,w
  4167     07E2  00A8               	movwf	??___flmul
  4168     07E3  1003               	clrc
  4169     07E4  0C28               	rrf	??___flmul,w
  4170     07E5  00B7               	movwf	___flmul@prod+3
  4171     07E6                     l670:
  4172     07E6  082D               	movf	___flmul@sign,w
  4173     07E7  00A8               	movwf	??___flmul
  4174     07E8  0828               	movf	??___flmul,w
  4175     07E9  04B7               	iorwf	___flmul@prod+3,f
  4176     07EA                     l1713:
  4177     07EA  0837               	movf	___flmul@prod+3,w
  4178     07EB  00A3               	movwf	?___flmul+3
  4179     07EC  0836               	movf	___flmul@prod+2,w
  4180     07ED  00A2               	movwf	?___flmul+2
  4181     07EE  0835               	movf	___flmul@prod+1,w
  4182     07EF  00A1               	movwf	?___flmul+1
  4183     07F0  0834               	movf	___flmul@prod,w
  4184     07F1  00A0               	movwf	?___flmul
  4185     07F2                     l658:
  4186     07F2  0008               	return
  4187     07F3                     __end_of___flmul:
  4188                           
  4189                           	psect	text14
  4190     0024                     __ptext14:	
  4191 ;; *************** function __Umul8_16 *****************
  4192 ;; Defined at:
  4193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      1    wreg     unsigned char 
  4196 ;;  multiplicand    1    0[COMMON] unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  multiplier      1    8[COMMON] unsigned char 
  4199 ;;  word_mpld       2    6[COMMON] unsigned int 
  4200 ;;  product         2    4[COMMON] unsigned int 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2    0[COMMON] unsigned int 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         2       0       0       0       0
  4211 ;;      Locals:         5       0       0       0       0
  4212 ;;      Temps:          2       0       0       0       0
  4213 ;;      Totals:         9       0       0       0       0
  4214 ;;Total ram usage:        9 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		___flmul
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223     0024                     __Umul8_16:	
  4224                           ;psect for function __Umul8_16
  4225                           
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4229                           ;__Umul8_16@multiplier stored from wreg
  4230     0024  00F8               	movwf	__Umul8_16@multiplier
  4231     0025                     l1453:
  4232     0025  01F4               	clrf	__Umul8_16@product
  4233     0026  01F5               	clrf	__Umul8_16@product+1
  4234     0027                     l1455:
  4235     0027  0870               	movf	__Umul8_16@multiplicand,w
  4236     0028  00F2               	movwf	??__Umul8_16
  4237     0029  01F3               	clrf	??__Umul8_16+1
  4238     002A  0872               	movf	??__Umul8_16,w
  4239     002B  00F6               	movwf	__Umul8_16@word_mpld
  4240     002C  0873               	movf	??__Umul8_16+1,w
  4241     002D  00F7               	movwf	__Umul8_16@word_mpld+1
  4242     002E                     l1457:
  4243     002E  1C78               	btfss	__Umul8_16@multiplier,0
  4244     002F  2831               	goto	u1101
  4245     0030  2832               	goto	u1100
  4246     0031                     u1101:
  4247     0031  2838               	goto	l677
  4248     0032                     u1100:
  4249     0032                     l1459:
  4250     0032  0876               	movf	__Umul8_16@word_mpld,w
  4251     0033  07F4               	addwf	__Umul8_16@product,f
  4252     0034  1803               	skipnc
  4253     0035  0AF5               	incf	__Umul8_16@product+1,f
  4254     0036  0877               	movf	__Umul8_16@word_mpld+1,w
  4255     0037  07F5               	addwf	__Umul8_16@product+1,f
  4256     0038                     l677:
  4257     0038  3001               	movlw	1
  4258     0039                     u1115:
  4259     0039  1003               	clrc
  4260     003A  0DF6               	rlf	__Umul8_16@word_mpld,f
  4261     003B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4262     003C  3EFF               	addlw	-1
  4263     003D  1D03               	skipz
  4264     003E  2839               	goto	u1115
  4265     003F  1003               	clrc
  4266     0040  0CF8               	rrf	__Umul8_16@multiplier,f
  4267     0041                     l1461:
  4268     0041  0878               	movf	__Umul8_16@multiplier,w
  4269     0042  1D03               	btfss	3,2
  4270     0043  2845               	goto	u1121
  4271     0044  2846               	goto	u1120
  4272     0045                     u1121:
  4273     0045  282E               	goto	l1457
  4274     0046                     u1120:
  4275     0046                     l1463:
  4276     0046  0875               	movf	__Umul8_16@product+1,w
  4277     0047  00F1               	movwf	?__Umul8_16+1
  4278     0048  0874               	movf	__Umul8_16@product,w
  4279     0049  00F0               	movwf	?__Umul8_16
  4280     004A                     l679:
  4281     004A  0008               	return
  4282     004B                     __end_of__Umul8_16:
  4283                           
  4284                           	psect	text15
  4285     0E50                     __ptext15:	
  4286 ;; *************** function _Lcd_Write_String *****************
  4287 ;; Defined at:
  4288 ;;		line 67 in file "LCD.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  a               1    wreg     PTR unsigned char 
  4291 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  a               1    5[COMMON] PTR unsigned char 
  4294 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  4295 ;;  i               2    3[COMMON] int 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         3       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0
  4308 ;;      Totals:         3       0       0       0       0
  4309 ;;Total ram usage:        3 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 2
  4312 ;; This function calls:
  4313 ;;		_Lcd_Write_Char
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319     0E50                     _Lcd_Write_String:	
  4320                           ;psect for function _Lcd_Write_String
  4321                           
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4325                           ;Lcd_Write_String@a stored from wreg
  4326     0E50  00F5               	movwf	Lcd_Write_String@a
  4327     0E51                     l1533:
  4328                           
  4329                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  4330     0E51  01F3               	clrf	Lcd_Write_String@i
  4331     0E52  01F4               	clrf	Lcd_Write_String@i+1
  4332     0E53  2E67               	goto	l1539
  4333     0E54                     l1535:
  4334                           
  4335                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  4336     0E54  0873               	movf	Lcd_Write_String@i,w
  4337     0E55  0775               	addwf	Lcd_Write_String@a,w
  4338     0E56  0084               	movwf	4
  4339     0E57  120A  158A  2000  120A  158A  	fcall	stringdir
  4340     0E5C  120A  158A  25E7  120A  158A  	fcall	_Lcd_Write_Char
  4341     0E61                     l1537:
  4342     0E61  3001               	movlw	1
  4343     0E62  07F3               	addwf	Lcd_Write_String@i,f
  4344     0E63  1803               	skipnc
  4345     0E64  0AF4               	incf	Lcd_Write_String@i+1,f
  4346     0E65  3000               	movlw	0
  4347     0E66  07F4               	addwf	Lcd_Write_String@i+1,f
  4348     0E67                     l1539:
  4349     0E67  0873               	movf	Lcd_Write_String@i,w
  4350     0E68  0775               	addwf	Lcd_Write_String@a,w
  4351     0E69  0084               	movwf	4
  4352     0E6A  120A  158A  2000  120A  158A  	fcall	stringdir
  4353     0E6F  3A00               	xorlw	0
  4354     0E70  1D03               	skipz
  4355     0E71  2E73               	goto	u1151
  4356     0E72  2E74               	goto	u1150
  4357     0E73                     u1151:
  4358     0E73  2E54               	goto	l1535
  4359     0E74                     u1150:
  4360     0E74                     l177:
  4361     0E74  0008               	return
  4362     0E75                     __end_of_Lcd_Write_String:
  4363                           
  4364                           	psect	text16
  4365     0DE7                     __ptext16:	
  4366 ;; *************** function _Lcd_Write_Char *****************
  4367 ;; Defined at:
  4368 ;;		line 58 in file "LCD.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  a               1    wreg     unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  a               1    2[COMMON] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0, pclath, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         0       0       0       0       0
  4383 ;;      Locals:         1       0       0       0       0
  4384 ;;      Temps:          1       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 1
  4389 ;; This function calls:
  4390 ;;		_Lcd_Port
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;;		_Lcd_Write_String
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397     0DE7                     _Lcd_Write_Char:	
  4398                           ;psect for function _Lcd_Write_Char
  4399                           
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4403                           ;Lcd_Write_Char@a stored from wreg
  4404     0DE7  00F2               	movwf	Lcd_Write_Char@a
  4405     0DE8                     l1339:
  4406                           
  4407                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  4408     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4409     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4410     0DEA  1409               	bsf	9,0	;volatile
  4411     0DEB                     l1341:
  4412                           
  4413                           ;LCD.c: 60:     Lcd_Port(a);
  4414     0DEB  0872               	movf	Lcd_Write_Char@a,w
  4415     0DEC  120A  158A  25B6  120A  158A  	fcall	_Lcd_Port
  4416     0DF1                     l1343:
  4417                           
  4418                           ;LCD.c: 61:     RE1 = 1;
  4419     0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  4420     0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  4421     0DF3  1489               	bsf	9,1	;volatile
  4422     0DF4                     l1345:
  4423                           
  4424                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4425     0DF4  301A               	movlw	26
  4426     0DF5  00F1               	movwf	??_Lcd_Write_Char
  4427     0DF6                     u1907:
  4428     0DF6  0BF1               	decfsz	??_Lcd_Write_Char,f
  4429     0DF7  2DF6               	goto	u1907
  4430     0DF8  0000               	nop
  4431     0DF9                     l1347:
  4432                           
  4433                           ;LCD.c: 63:     RE1 = 0;
  4434     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  4435     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  4436     0DFB  1089               	bcf	9,1	;volatile
  4437     0DFC                     l171:
  4438     0DFC  0008               	return
  4439     0DFD                     __end_of_Lcd_Write_Char:
  4440                           
  4441                           	psect	text17
  4442     0004                     __ptext17:	
  4443 ;; *************** function _Lcd_Set_Cursor *****************
  4444 ;; Defined at:
  4445 ;;		line 32 in file "LCD.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  a               1    wreg     unsigned char 
  4448 ;;  b               1    4[COMMON] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  a               1    5[COMMON] unsigned char 
  4451 ;;  direccion       1    6[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         1       0       0       0       0
  4462 ;;      Locals:         2       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0
  4464 ;;      Totals:         3       0       0       0       0
  4465 ;;Total ram usage:        3 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 2
  4468 ;; This function calls:
  4469 ;;		_Lcd_Cmd
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475     0004                     _Lcd_Set_Cursor:	
  4476                           ;psect for function _Lcd_Set_Cursor
  4477                           
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4481                           ;Lcd_Set_Cursor@a stored from wreg
  4482     0004  00F5               	movwf	Lcd_Set_Cursor@a
  4483     0005                     l1521:
  4484                           
  4485                           ;LCD.c: 33:     char direccion;;LCD.c: 34:     if (a == 1) {
  4486     0005  0375               	decf	Lcd_Set_Cursor@a,w
  4487     0006  1D03               	btfss	3,2
  4488     0007  2809               	goto	u1131
  4489     0008  280A               	goto	u1130
  4490     0009                     u1131:
  4491     0009  2814               	goto	l1527
  4492     000A                     u1130:
  4493     000A                     l1523:
  4494                           
  4495                           ;LCD.c: 35:         direccion = 0x80 + b - 1;
  4496     000A  0874               	movf	Lcd_Set_Cursor@b,w
  4497     000B  3E7F               	addlw	127
  4498     000C  00F6               	movwf	Lcd_Set_Cursor@direccion
  4499     000D                     l1525:
  4500                           
  4501                           ;LCD.c: 36:         Lcd_Cmd(direccion);
  4502     000D  0876               	movf	Lcd_Set_Cursor@direccion,w
  4503     000E  120A  158A  2613  120A  118A  	fcall	_Lcd_Cmd
  4504                           
  4505                           ;LCD.c: 37:     } else if (a == 2) {
  4506     0013  2823               	goto	l165
  4507     0014                     l1527:
  4508     0014  3002               	movlw	2
  4509     0015  0675               	xorwf	Lcd_Set_Cursor@a,w
  4510     0016  1D03               	btfss	3,2
  4511     0017  2819               	goto	u1141
  4512     0018  281A               	goto	u1140
  4513     0019                     u1141:
  4514     0019  2823               	goto	l165
  4515     001A                     u1140:
  4516     001A                     l1529:
  4517                           
  4518                           ;LCD.c: 38:         direccion = 0xC0 + b - 1;
  4519     001A  0874               	movf	Lcd_Set_Cursor@b,w
  4520     001B  3EBF               	addlw	191
  4521     001C  00F6               	movwf	Lcd_Set_Cursor@direccion
  4522     001D                     l1531:
  4523                           
  4524                           ;LCD.c: 39:         Lcd_Cmd(direccion);
  4525     001D  0876               	movf	Lcd_Set_Cursor@direccion,w
  4526     001E  120A  158A  2613  120A  118A  	fcall	_Lcd_Cmd
  4527     0023                     l165:
  4528     0023  0008               	return
  4529     0024                     __end_of_Lcd_Set_Cursor:
  4530                           
  4531                           	psect	text18
  4532     0E75                     __ptext18:	
  4533 ;; *************** function _Lcd_Init *****************
  4534 ;; Defined at:
  4535 ;;		line 43 in file "LCD.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, pclath, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4549 ;;      Params:         0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0
  4551 ;;      Temps:          2       0       0       0       0
  4552 ;;      Totals:         2       0       0       0       0
  4553 ;;Total ram usage:        2 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 2
  4556 ;; This function calls:
  4557 ;;		_Lcd_Cmd
  4558 ;;		_Lcd_Port
  4559 ;; This function is called by:
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564     0E75                     _Lcd_Init:	
  4565                           ;psect for function _Lcd_Init
  4566                           
  4567     0E75                     l1483:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4570                           
  4571                           
  4572                           ;LCD.c: 44:     Lcd_Port(0x00);
  4573     0E75  3000               	movlw	0
  4574     0E76  120A  158A  25B6  120A  158A  	fcall	_Lcd_Port
  4575     0E7B                     l1485:
  4576                           
  4577                           ;LCD.c: 45:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4578     0E7B  3034               	movlw	52
  4579     0E7C  00F5               	movwf	??_Lcd_Init+1
  4580     0E7D  30F1               	movlw	241
  4581     0E7E  00F4               	movwf	??_Lcd_Init
  4582     0E7F                     u1917:
  4583     0E7F  0BF4               	decfsz	??_Lcd_Init,f
  4584     0E80  2E7F               	goto	u1917
  4585     0E81  0BF5               	decfsz	??_Lcd_Init+1,f
  4586     0E82  2E7F               	goto	u1917
  4587     0E83  2E84               	nop2
  4588     0E84                     l1487:
  4589                           
  4590                           ;LCD.c: 46:     Lcd_Cmd(0x30);
  4591     0E84  3030               	movlw	48
  4592     0E85  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4593                           
  4594                           ;LCD.c: 47:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4595     0E8A  300D               	movlw	13
  4596     0E8B  00F5               	movwf	??_Lcd_Init+1
  4597     0E8C  30FB               	movlw	251
  4598     0E8D  00F4               	movwf	??_Lcd_Init
  4599     0E8E                     u1927:
  4600     0E8E  0BF4               	decfsz	??_Lcd_Init,f
  4601     0E8F  2E8E               	goto	u1927
  4602     0E90  0BF5               	decfsz	??_Lcd_Init+1,f
  4603     0E91  2E8E               	goto	u1927
  4604     0E92  2E93               	nop2
  4605     0E93                     l1489:
  4606                           
  4607                           ;LCD.c: 48:     Lcd_Cmd(0x30);
  4608     0E93  3030               	movlw	48
  4609     0E94  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4610     0E99                     l1491:
  4611                           
  4612                           ;LCD.c: 49:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4613     0E99  301D               	movlw	29
  4614     0E9A  00F5               	movwf	??_Lcd_Init+1
  4615     0E9B  3091               	movlw	145
  4616     0E9C  00F4               	movwf	??_Lcd_Init
  4617     0E9D                     u1937:
  4618     0E9D  0BF4               	decfsz	??_Lcd_Init,f
  4619     0E9E  2E9D               	goto	u1937
  4620     0E9F  0BF5               	decfsz	??_Lcd_Init+1,f
  4621     0EA0  2E9D               	goto	u1937
  4622                           
  4623                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  4624     0EA1  3030               	movlw	48
  4625     0EA2  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4626                           
  4627                           ;LCD.c: 52:     Lcd_Cmd(0x3C);
  4628     0EA7  303C               	movlw	60
  4629     0EA8  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4630                           
  4631                           ;LCD.c: 53:     Lcd_Cmd(0x0C);
  4632     0EAD  300C               	movlw	12
  4633     0EAE  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4634                           
  4635                           ;LCD.c: 54:     Lcd_Cmd(0x01);
  4636     0EB3  3001               	movlw	1
  4637     0EB4  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4638                           
  4639                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  4640     0EB9  3006               	movlw	6
  4641     0EBA  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4642     0EBF                     l168:
  4643     0EBF  0008               	return
  4644     0EC0                     __end_of_Lcd_Init:
  4645                           
  4646                           	psect	text19
  4647     0DDA                     __ptext19:	
  4648 ;; *************** function _Lcd_Clear *****************
  4649 ;; Defined at:
  4650 ;;		line 27 in file "LCD.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 2
  4671 ;; This function calls:
  4672 ;;		_Lcd_Cmd
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678     0DDA                     _Lcd_Clear:	
  4679                           ;psect for function _Lcd_Clear
  4680                           
  4681     0DDA                     l1519:	
  4682                           ;incstack = 0
  4683                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4684                           
  4685                           
  4686                           ;LCD.c: 28:     Lcd_Cmd(0);
  4687     0DDA  3000               	movlw	0
  4688     0DDB  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4689                           
  4690                           ;LCD.c: 29:     Lcd_Cmd(1);
  4691     0DE0  3001               	movlw	1
  4692     0DE1  120A  158A  2613  120A  158A  	fcall	_Lcd_Cmd
  4693     0DE6                     l159:
  4694     0DE6  0008               	return
  4695     0DE7                     __end_of_Lcd_Clear:
  4696                           
  4697                           	psect	text20
  4698     0E13                     __ptext20:	
  4699 ;; *************** function _Lcd_Cmd *****************
  4700 ;; Defined at:
  4701 ;;		line 18 in file "LCD.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  a               1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  a               1    3[COMMON] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       0       0       0       0
  4716 ;;      Locals:         1       0       0       0       0
  4717 ;;      Temps:          2       0       0       0       0
  4718 ;;      Totals:         3       0       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 1
  4722 ;; This function calls:
  4723 ;;		_Lcd_Port
  4724 ;; This function is called by:
  4725 ;;		_Lcd_Clear
  4726 ;;		_Lcd_Set_Cursor
  4727 ;;		_Lcd_Init
  4728 ;;		_Lcd_Shift_Right
  4729 ;;		_Lcd_Shift_Left
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733     0E13                     _Lcd_Cmd:	
  4734                           ;psect for function _Lcd_Cmd
  4735                           
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4739                           ;Lcd_Cmd@a stored from wreg
  4740     0E13  00F3               	movwf	Lcd_Cmd@a
  4741     0E14                     l1361:
  4742                           
  4743                           ;LCD.c: 19:     PORTEbits.RE0 = 0;
  4744     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4745     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4746     0E16  1009               	bcf	9,0	;volatile
  4747     0E17                     l1363:
  4748                           
  4749                           ;LCD.c: 20:     Lcd_Port(a);
  4750     0E17  0873               	movf	Lcd_Cmd@a,w
  4751     0E18  120A  158A  25B6  120A  158A  	fcall	_Lcd_Port
  4752     0E1D                     l1365:
  4753                           
  4754                           ;LCD.c: 21:     RE1 = 1;
  4755     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4756     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4757     0E1F  1489               	bsf	9,1	;volatile
  4758     0E20                     l1367:
  4759                           
  4760                           ;LCD.c: 22:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4761     0E20  300B               	movlw	11
  4762     0E21  00F2               	movwf	??_Lcd_Cmd+1
  4763     0E22  3062               	movlw	98
  4764     0E23  00F1               	movwf	??_Lcd_Cmd
  4765     0E24                     u1947:
  4766     0E24  0BF1               	decfsz	??_Lcd_Cmd,f
  4767     0E25  2E24               	goto	u1947
  4768     0E26  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4769     0E27  2E24               	goto	u1947
  4770     0E28  0000               	nop
  4771     0E29                     l1369:
  4772                           
  4773                           ;LCD.c: 24:     RE1 = 0;
  4774     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4775     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4776     0E2B  1089               	bcf	9,1	;volatile
  4777     0E2C                     l156:
  4778     0E2C  0008               	return
  4779     0E2D                     __end_of_Lcd_Cmd:
  4780                           
  4781                           	psect	text21
  4782     0DB6                     __ptext21:	
  4783 ;; *************** function _Lcd_Port *****************
  4784 ;; Defined at:
  4785 ;;		line 14 in file "LCD.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  a               1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  a               1    0[COMMON] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       0       0       0       0
  4800 ;;      Locals:         1       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0
  4802 ;;      Totals:         1       0       0       0       0
  4803 ;;Total ram usage:        1 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_Lcd_Cmd
  4809 ;;		_Lcd_Init
  4810 ;;		_Lcd_Write_Char
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814     0DB6                     _Lcd_Port:	
  4815                           ;psect for function _Lcd_Port
  4816                           
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in _Lcd_Port: [wreg]
  4820                           ;Lcd_Port@a stored from wreg
  4821     0DB6  00F0               	movwf	Lcd_Port@a
  4822     0DB7                     l1337:
  4823                           
  4824                           ;LCD.c: 15:     PORTA = a;
  4825     0DB7  0870               	movf	Lcd_Port@a,w
  4826     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  4827     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  4828     0DBA  0085               	movwf	5	;volatile
  4829     0DBB                     l153:
  4830     0DBB  0008               	return
  4831     0DBC                     __end_of_Lcd_Port:
  4832     007E                     btemp	set	126	;btemp
  4833     007E                     wtemp0	set	126
  4834                           
  4835                           	psect	idloc
  4836                           
  4837                           ;Config register IDLOC0 @ 0x2000
  4838                           ;	unspecified, using default values
  4839     2000                     	org	8192
  4840     2000  3FFF               	dw	16383
  4841                           
  4842                           ;Config register IDLOC1 @ 0x2001
  4843                           ;	unspecified, using default values
  4844     2001                     	org	8193
  4845     2001  3FFF               	dw	16383
  4846                           
  4847                           ;Config register IDLOC2 @ 0x2002
  4848                           ;	unspecified, using default values
  4849     2002                     	org	8194
  4850     2002  3FFF               	dw	16383
  4851                           
  4852                           ;Config register IDLOC3 @ 0x2003
  4853                           ;	unspecified, using default values
  4854     2003                     	org	8195
  4855     2003  3FFF               	dw	16383
  4856                           
  4857                           	psect	config
  4858                           
  4859                           ;Config register CONFIG1 @ 0x2007
  4860                           ;	Oscillator Selection bits
  4861                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4862                           ;	Watchdog Timer Enable bit
  4863                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4864                           ;	Power-up Timer Enable bit
  4865                           ;	PWRTE = OFF, PWRT disabled
  4866                           ;	RE3/MCLR pin function select bit
  4867                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4868                           ;	Code Protection bit
  4869                           ;	CP = OFF, Program memory code protection is disabled
  4870                           ;	Data Code Protection bit
  4871                           ;	CPD = OFF, Data memory code protection is disabled
  4872                           ;	Brown Out Reset Selection bits
  4873                           ;	BOREN = OFF, BOR disabled
  4874                           ;	Internal External Switchover bit
  4875                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4876                           ;	Fail-Safe Clock Monitor Enabled bit
  4877                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4878                           ;	Low Voltage Programming Enable bit
  4879                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4880                           ;	In-Circuit Debugger Mode bit
  4881                           ;	DEBUG = 0x1, unprogramme  4882     2007                     	org	8199
  4883     2007  20D4               	dw	8404
  4884                           
  4885                           ;Config register CONFIG2 @ 0x2008
  4886                           ;	Brown-out Reset Selection bit
  4887                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4888                           ;	Flash Program Memory Self Write Enable bits
  4889                           ;	WRT = OFF, Write protection off
  4890     2008                     	org	8200
  4891     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _setup->_spiInit
    _displays3->___awdiv
    _displays2->___awdiv
    _displays->___awdiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   13612
                                             36 BANK0     16    16      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _displays
                          _displays2
                          _displays3
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _displays3                                            4     2      2    2540
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _displays2                                            4     2      2    2540
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _displays                                             4     2      2    2540
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2873
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     233
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1242
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _displays
     ___awdiv
     ___awmod
   _displays2
     ___awdiv
     ___awmod
   _displays3
     ___awdiv
     ___awmod
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      57       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      57      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 03 18:06:22 2023

                       pc 0002               _SSPSTATbits 0094                        l99 0E4F  
            ___awdiv@sign 0076                        fsr 0004       __Umul8_16@word_mpld 0076  
                     l102 0F0C                       l105 0F59                       l131 0DC8  
                     l108 0FA6                       l124 0E0D                       l125 0E12  
                     l142 0DD9                       l134 0DC1                       l128 0DC2  
                     l153 0DBB                       l171 0DFC                       l156 0E2C  
                     l165 0023                       l422 00B1                       l159 0DE6  
                     l168 0EBF                       l177 0E74                       l435 0FFF  
                     l462 0114                       l702 014C                       l455 0129  
                     l704 01E1                       l465 0129                       l715 01AB  
                     l716 01B7                       l708 018F                       l670 07E6  
                     l664 0762                       l658 07F2                       l677 0038  
                     l679 004A                       _RE1 0049                       u900 0DC8  
                     u901 0DC7                       u910 0050                       u911 004F  
                     u920 005B                       u921 005A                       u930 006C  
                     u931 006B                       u950 007E                       u951 007D  
                     u945 0070                       u970 008F                       u890 0E05  
                     u971 008E                       u891 0E04                       u965 007F  
                     u990 00A3                       u991 00A2                       u975 008B  
                     u985 0097                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076              ___flmul@aexp 0032              ___flmul@bexp 0033  
            ___flmul@sign 002D              ___flmul@temp 0038              ___flmul@prod 0034  
            ___fltol@exp1 0043                      l1401 0095                      l1411 00AD  
                    l1403 0096                      l1341 0DEB                      l1405 009D  
                    l1421 0FB1                      l1501 0EC0                      l1343 0DF1  
                    l1407 00A3                      l1431 0FC5                      l1423 0FB3  
                    l1415 0FA7                      l1503 0F0A                      l1351 0E05  
                    l1337 0DB7                      l1361 0E14                      l1521 0005  
                    l1345 0DF4                      l1601 04E5                      l1409 00A8  
                    l1441 0FE4                      l1433 0FCC                      l1425 0FB7  
                    l1417 0FA8                      l1513 0F5A                      l1353 0E07  
                    l1363 0E17                      l1531 001D                      l1523 000A  
                    l1347 0DF9                      l1339 0DE8                      l1611 04FA  
                    l1603 04E6                      l1371 004B                      l1443 0FEB  
                    l1435 0FD0                      l1427 0FBC                      l1419 0FAC  
                    l1507 0F0D                      l1515 0FA4                      l1355 0E09  
                    l1365 0E1D                      l1525 000D                      l1533 0E51  
                    l1461 0041                      l1453 0025                      l1701 07C4  
                    l1621 0515                      l1613 0502                      l1605 04EB  
                    l1541 00B2                      l1381 005B                      l1373 004C  
                    l1437 0FD4                      l1429 0FC2                      l1445 0FF1  
                    l1509 0F57                      l1357 0E0C                      l1349 0DFE  
                    l1367 0E20                      l1519 0DDA                      l1527 0014  
                    l1535 0E54                      l1463 0046                      l1455 0027  
                    l1711 07E1                      l1703 07CE                      l1631 0591  
                    l1623 0523                      l1615 0507                      l1607 04F0  
                    l1551 00DA                      l1543 00BD                      l1391 006F  
                    l1383 0060                      l1375 0050                      l1447 0FF6  
                    l1439 0FDE                      l1471 0E35                      l1359 0DC2  
                    l1369 0E29                      l1529 001A                      l1537 0E61  
                    l1457 002E                      l1713 07EA                      l1705 07D0  
                    l1641 05FD                      l1633 05AD                      l1625 0530  
                    l1617 050C                      l1609 04F8                      l1553 00E2  
                    l1721 0134                      l1393 0076                      l1385 0064  
                    l1377 0055                      l1449 0FFB                      l1481 0E46  
                    l1473 0E3F                      l1801 0279                      l1491 0E99  
                    l1483 0E75                      l1539 0E67                      l1459 0032  
                    l1707 07DC                      l1651 0687                      l1643 060B  
                    l1635 05C9                      l1627 054B                      l1571 0109  
                    l1563 00F0                      l1555 00E4                      l1547 00C6  
                    l1731 0160                      l1723 0144                      l1395 007A  
                    l1387 0066                      l1379 0057                      l1475 0E40  
                    l1467 0E2D                      l1811 029F                      l1803 0281  
                    l1485 0E7B                      l1709 07E0                      l1661 0717  
                    l1653 0695                      l1645 0628                      l1637 05D2  
                    l1629 0567                      l1581 04B7                      l1573 0119  
                    l1557 00E8                      l1565 0102                      l1549 00D9  
                    l1741 0196                      l1733 016D                      l1725 0154  
                    l1717 012B                      l1397 007E                      l1389 006C  
                    l1477 0E41                      l1469 0E34                      l1493 0DBD  
                    l1821 0304                      l1813 02B7                      l1805 028B  
                    l1487 0E84                      l1671 073C                      l1663 0725  
                    l1655 06C0                      l1647 063F                      l1639 05E0  
                    l1591 04CE                      l1583 04BB                      l1575 011E  
                    l1751 01CF                      l1743 01A1                      l1735 0174  
                    l1719 0130                      l1399 008F                      l1479 0E45  
                    l1495 0DD1                      l1831 03C5                      l1823 0337  
                    l1815 02C1                      l1807 028E                      l1489 0E93  
                    l1681 075F                      l1665 072E                      l1673 0742  
                    l1657 06E6                      l1649 065C                      l1593 04D0  
                    l1585 04BC                      l1577 04AE                      l1753 01D4  
                    l1745 01A5                      l1737 0178                      l1729 015D  
                    l1497 0DD6                      l1841 03E6                      l1833 03CA  
                    l1825 0369                      l1817 02C4                      l1809 029C  
                    l1761 01E2                      l1691 077E                      l1675 0746  
                    l1667 0732                      l1659 070E                      l1595 04D8  
                    l1587 04C1                      l1579 04B3                      l1755 01D8  
                    l1747 01AF                      l1739 0186                      l1851 0404  
                    l1843 03EB                      l1835 03D0                      l1827 03B7  
                    l1819 02D2                      l1771 0207                      l1763 01EC  
                    l1693 0797                      l1685 0767                      l1677 0747  
                    l1669 0733                      l1597 04DD                      l1589 04C6  
                    l1757 01D9                      l1749 01B9                      l1861 0440  
                    l1853 040C                      l1845 03F1                      l1837 03D8  
                    l1829 03BD                      l1781 022C                      l1773 020E  
                    l1765 01EF                      l1687 076C                      l1695 079D  
                    l1679 074B                      l1599 04E1                      l1871 046F  
                    l1863 0446                      l1855 0412                      l1847 03F9  
                    l1839 03DE                      l1791 0255                      l1783 0236  
                    l1775 0218                      l1767 01F9                      l1697 07AA  
                    l1689 077A                      l1881 048D                      l1873 0474  
                    l1865 044E                      l1857 041A                      l1849 03FE  
                    l1793 0258                      l1785 023C                      l1777 021B  
                    l1769 01FF                      l1699 07B5                      l1883 0495  
                    l1875 047A                      l1867 0461                      l1859 043B  
                    l1795 0266                      l1787 0244                      l1779 0229  
                    l1885 049A                      l1877 0482                      l1869 0467  
                    l1797 0269                      l1789 024B                      l1887 04A0  
                    l1879 0487                      l1799 0273                      STR_1 0806  
                    STR_2 080B                      STR_3 0810                      u1000 00A8  
                    u1001 00A7                      u1010 0FAC                      u1011 0FAB  
                    u1100 0032                      u1020 0FB7                      u1101 0031  
                    u1021 0FB6                      u1030 0FC2                      u1031 0FC1  
                    u1120 0046                      u1121 0045                      u1130 000A  
                    u1210 0101                      u1050 0FD4                      u1131 0009  
                    u1115 0039                      u1211 0100                      u1051 0FD3  
                    u1140 001A                      u1300 04EB                      u1220 0108  
                    u1060 0FDE                      u1141 0019                      u1301 04EA  
                    u1221 0107                      u1205 00F1                      u1061 0FDD  
                    u1045 0FC6                      u1150 0E74                      u1310 04F0  
                    u1151 0E73                      u1311 04EF                      u1320 0507  
                    u1240 0119                      u1160 00BD                      u1080 0FF1  
                    u1401 061A                      u1321 0506                      u1241 0118  
                    u1161 00BC                      u1081 0FF0                      u1065 0FDA  
                    u1402 0621                      u1330 050C                      u1250 011E  
                    u1170 00D4                      u1090 0FF6                      u1403 0628  
                    u1331 050B                      u1251 011D                      u1235 010B  
                    u1091 0FF5                      u1075 0FE5                      u1260 04BB  
                    u1180 00E8                      u1421 064E                      u1341 0559  
                    u1261 04BA                      u1181 00E7                      u1510 0732  
                    u1422 0655                      u1342 0560                      u1270 04C1  
                    u1190 00EF                      u1511 0731                      u1431 0679  
                    u1423 065C                      u1415 062A                      u1351 0575  
                    u1343 0567                      u1271 04C0                      u1191 00EE  
                    u1175 00CF                      u1600 07AA                      u1432 0680  
                    u1352 057C                      u1280 04C6                      u1601 07A9  
                    u1505 0727                      u1441 06A4                      u1433 0687  
                    u1361 059F                      u1353 0583                      u1281 04C5  
                    u1610 07C4                      u1530 0746                      u1450 06CC  
                    u1442 06AB                      u1362 05A6                      u1290 04E5  
                    u1611 07C3                      u1531 0745                      u1443 06B2  
                    u1371 05BB                      u1363 05AD                      u1291 04E4  
                    u1620 07E0                      u1540 074B                      u1372 05C2  
                    u1621 07DF                      u1605 07A6                      u1541 074A  
                    u1525 0735                      u1461 06D8                      u1373 05C9  
                    u1550 075F                      u1470 06F4                      u1462 06DF  
                    u1710 01A5                      u1630 0130                      u1615 07C0  
                    u1551 075E                      u1463 06E6                      u1455 06C7  
                    u1391 05EF                      u1711 01A4                      u1631 012F  
                    u1560 0766                      u1392 05F6                      u1720 01AB  
                    u1640 0134                      u1561 0765                      u1481 0700  
                    u1393 05FD                      u1385 05CB                      u1721 01AA  
                    u1705 019A                      u1641 0133                      u1570 076C  
                    u1482 0707                      u1730 01AF                      u1650 0154  
                    u1571 076B                      u1483 070E                      u1475 06EF  
                    u1731 01AE                      u1651 0153                      u1580 077E  
                    u1740 01C4                      u1581 077D                      u1590 078D  
                    u1750 01D4                      u1670 0173                      u1495 0710  
                    u1751 01D3                      u1671 0172                      u1807 0232  
                    u1760 01D8                      u1761 01D7                      u1745 01BF  
                    u1665 0165                      u1817 0251                      u1690 0195  
                    u1907 0DF6                      u1595 0788                      u1691 0194  
                    u1827 0260                      u1917 0E7F                      u1685 0187  
                    u1837 026F                      u1927 0E8E                      u1847 0287  
                    u1937 0E9D                      u1857 0296                      u1777 01F5  
                    u1947 0E24                      u1867 02A5                      u1787 0214  
                    u1877 02BD                      u1797 0223                      u1887 02CC  
                    u1897 04A6         ?_Lcd_Write_String 0070                      _main 01E2  
                    btemp 007E               main@valor_c 0047               main@valor_d 0048  
             main@valor_u 0049               displays@num 0079                      start 0000  
      ??_Lcd_Write_String 0073           __end_of_Lcd_Cmd 0E2D             ___fltol@sign1 0042  
                   ?_main 0070           __end_of___awdiv 00B2           __end_of___awmod 1000  
         __end_of___flmul 07F3           __end_of___fltol 012A                     _ANSEL 0188  
         ___awdiv@divisor 0070           ___awdiv@counter 0075                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089              displays2@num 0079              displays3@num 0079  
                   _setup 0E2D              main@valor_c2 004A              main@valor_c3 004D  
            main@valor_d2 004B              main@valor_d3 004E              main@valor_u2 004C  
            main@valor_u3 004F                     pclath 000A           __end_of_spiInit 0E13  
         __end_of_spiRead 0DDA                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 0EC0          __end_of_Lcd_Port 0DBC           __initialization 07F3  
            __end_of_main 04AE                    ??_main 0044          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of___xxtofl 01E2          __end_of_displays 0F0D                 ??___awdiv 0074  
               ??___awmod 0074                 ??___flmul 0028                 ??___fltol 003E  
        ___awdiv@quotient 0077           ___awmod@divisor 0070           ___awmod@counter 0075  
        __end_of_spiWrite 0DC2                 ??_spiInit 0073                 ??_spiRead 0070  
         Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0DE7                ___fltol@f1 003A   Lcd_Set_Cursor@direccion 0076  
          __pcstackCOMMON 0070             __end_of_setup 0E50            _Lcd_Set_Cursor 0004  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0074  
              __pbssBANK0 0054         __end_of__Umul8_16 004B                __pmaintext 01E2  
  __end_of_Lcd_Set_Cursor 0024                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                 ?_displays 0079  
              __stringtab 0800            _Lcd_Write_Char 0DE7                   _Lcd_Cmd 0E13  
               ?_spiWrite 0070         __end_of_displays2 0F5A         __end_of_displays3 0FA7  
                 ___awdiv 004B                   ___awmod 0FA7                   ___flmul 04AE  
                 ___fltol 00B2                   _decenas 0066           ?_Lcd_Set_Cursor 0074  
                 __ptext1 0DBC                   __ptext2 0DD1                   __ptext3 0DC2  
                 __ptext4 0E2D                   __ptext5 0DFD                   __ptext6 0F5A  
                 __ptext7 0F0D                   __ptext8 0EC0                   __ptext9 0FA7  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _residuo 0064  
                 _spiInit 0DFD                   _spiRead 0DD1                   clrloop0 0DCA  
  __end_of_Lcd_Write_Char 0DFD                ??_displays 007B      end_of_initialization 07FC  
           _ADC_voltaje_2 0058                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTEbits 0009             ___xxtofl@sign 0078  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 0073               ___flmul@grs 002E                 _Lcd_Clear 0DDA  
          _spiReceiveWait 0DC2          _Lcd_Write_String 0E50       start_initialization 07F3  
  __end_of_spiReceiveWait 0DC9                ?_Lcd_Clear 0070                 __Umul8_16 0024  
         Lcd_Write_Char@a 0072               _ADC_voltaje 005A                 ___flmul@a 0024  
               ___flmul@b 0020                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070                 _main$1001 0050           ?_spiReceiveWait 0070  
               _centenas2 0063                 _centenas3 005F          ??_Lcd_Set_Cursor 0075  
                ?___awdiv 0070                  ?___awmod 0070                  ?___flmul 0020  
                ?___fltol 003A                ?__Umul8_16 0070                 __pstrings 0800  
               _displays2 0F0D                 _displays3 0F5A                  ?_spiInit 0070  
                ?_spiRead 0070      spiInit@sTransmitEdge 0072                 clear_ram0 0DC9  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
               _unidades2 0061                 _unidades3 005D                ?_displays2 0079  
              ?_displays3 0079               __stringbase 0805          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0E75                  _Lcd_Port 0DB6  __end_of_Lcd_Write_String 0E75  
             ??__Umul8_16 0072        __end_of__stringtab 0806                  _decenas2 0062  
                _decenas3 005E                  ___xxtofl 012A                  _centenas 0067  
                __ptext10 004B                  __ptext11 012A                  __ptext20 0E13  
                __ptext12 00B2                  __ptext21 0DB6                  __ptext13 04AE  
                __ptext14 0024                  __ptext15 0E50                  __ptext16 0DE7  
                __ptext17 0004                  __ptext18 0E75                  __ptext19 0DDA  
                _displays 0EC0                  _contador 0068                  _residuo2 0060  
                _residuo3 005C                  _spiWrite 0DBC                  _unidades 0065  
            spiInit@sType 0073           _ADC_voltaje_nc2 0054         spiInit@sClockIdle 0071  
             ??_displays2 007B               ??_displays3 007B          ??_spiReceiveWait 0070  
               stringcode 0800                _OSCCONbits 008F            _ADC_voltaje_nc 0056  
  __Umul8_16@multiplicand 0070                  stringdir 0800                  stringtab 0800  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
